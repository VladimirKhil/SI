<Page
    x:Class="SIGame.View.RulesSettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:SIGame"
    xmlns:localc="clr-namespace:SIGame.Converters"
    xmlns:vm="clr-namespace:SIGame.ViewModel;assembly=SIGame.ViewModel"
    xmlns:lp="clr-namespace:SIGame.Properties"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:data="clr-namespace:SIData;assembly=SIData"
    mc:Ignorable="d" 
    d:DesignHeight="1130.26"
    d:DesignWidth="1960.521"
    Title="{x:Static lp:Resources.GameRules}"
    FontSize="20"
    FontFamily="{StaticResource Font}"
    d:DataContext="{d:DesignInstance vm:MainViewModel}">
    <Page.Resources>
        <x:Array x:Key="GameModes" Type="{x:Type data:GameModes}">
            <data:GameModes>Tv</data:GameModes>
            <data:GameModes>Sport</data:GameModes>
        </x:Array>

        <ObjectDataProvider x:Key="ButtonPressMode" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="data:ButtonPressMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <localc:EnumConverter x:Key="GameModesConverter" EnumType="{x:Type data:GameModes}" />
        <localc:EnumConverter x:Key="ButtonPressModeConverter" EnumType="{x:Type data:ButtonPressMode}" />

        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,3" />
            <Setter Property="Width" Value="Auto" />
        </Style>
        
        <Style TargetType="{x:Type local:NumericTextBox}" BasedOn="{StaticResource {x:Type TextBox}}" />

        <Style x:Key="Header" TargetType="TextBlock" BasedOn="{StaticResource CommonText}">
            <Setter Property="Margin" Value="0,30,0,0" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="25" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#aaaaaa" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CheckText" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,30,0,0" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="25" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#aaaaaa" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeaderBox" TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBase}">
            <Setter Property="Margin" Value="0,30,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <localc:NotToCheckedConverter x:Key="NotToCheckedConverter" />
    </Page.Resources>

    <StackPanel DataContext="{Binding Settings}" Margin="10,5" IsEnabled="{Binding IsEditable}">
        <TextBlock
            Style="{StaticResource CommonText}"
            Foreground="White"
            Text="{x:Static lp:Resources.TheseSettingsAreChangedBeforeGame}"
            VerticalAlignment="Center"
            FontSize="20"
            Margin="5,10"
            TextWrapping="Wrap" />
        
        <TextBlock Text="{x:Static lp:Resources.GameType}" Style="{StaticResource Header}" />
        
        <ComboBox
            Style="{StaticResource ComboBoxStyle}"
            Foreground="White"
            FontWeight="Light"
            ItemsSource="{Binding Source={StaticResource GameModes}}"
            SelectedValue="{Binding GameMode}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource GameModesConverter}}" FontWeight="Light" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        
        <TextBlock Style="{StaticResource CommonText}" Foreground="White" Text="{Binding GameModeHint}" TextWrapping="Wrap" />

        <CheckBox IsChecked="{Binding Model.Oral}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.OralGame}" />
        </CheckBox>

        <TextBlock Style="{StaticResource CommonText}" Foreground="White" TextWrapping="Wrap" Text="{x:Static lp:Resources.OralGame_Hint}" />

        <CheckBox
            IsChecked="{Binding Model.OralPlayersActions}"
            Style="{StaticResource HeaderBox}"
            IsEnabled="{Binding Model.Oral}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.AllowPlayersToActInOralGame}" />
        </CheckBox>

        <CheckBox IsChecked="{Binding Model.FalseStart}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.FalseStart}" />
        </CheckBox>
        
        <TextBlock Style="{StaticResource CommonText}" Foreground="White" TextWrapping="Wrap" Text="{x:Static lp:Resources.DenyPressWhileReading}" />
        
        <CheckBox
            IsChecked="{Binding Model.PartialText}"
            Style="{StaticResource HeaderBox}"
            IsEnabled="{Binding Model.FalseStart, Converter={StaticResource NotToCheckedConverter}}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.PartialQuestions}" />
        </CheckBox>

        <TextBlock Style="{StaticResource CommonText}" Foreground="White" TextWrapping="Wrap" Text="{x:Static lp:Resources.PartialQuestions_Hint}" />

        <CheckBox
            IsChecked="{Binding Model.PartialImages}"
            Style="{StaticResource HeaderBox}"
            IsEnabled="{Binding Model.FalseStart, Converter={StaticResource NotToCheckedConverter}}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.PartialImages}" />
        </CheckBox>

        <TextBlock Style="{StaticResource CommonText}" Foreground="White" TextWrapping="Wrap" Text="{x:Static lp:Resources.PartialImages_Hint}" />

        <CheckBox Style="{StaticResource HeaderBox}" IsChecked="{Binding Model.PlayAllQuestionsInFinalRound}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.PlayAllQuestionsInFinalRound}" />
        </CheckBox>

        <CheckBox
            IsChecked="{Binding Model.AllowEveryoneToPlayHiddenStakes}"
            Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.AllowEveryoneToPlayHiddenStakes}" />
        </CheckBox>

        <TextBlock Style="{StaticResource CommonText}" Foreground="White" Text="{x:Static lp:Resources.EvenWithNegativeScore}" TextWrapping="Wrap" />

        <CheckBox IsChecked="{Binding Model.HintShowman}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.HintShowman}" />
        </CheckBox>
        
        <TextBlock Style="{StaticResource CommonText}" Foreground="White" TextWrapping="Wrap" Text="{x:Static lp:Resources.AnswersAtBottom}" />
        
        <CheckBox IsChecked="{Binding Model.Managed}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.ManagedGame}" />
        </CheckBox>
        
        <TextBlock Style="{StaticResource CommonText}" Foreground="White" TextWrapping="Wrap" Text="{x:Static lp:Resources.ManagedGame_Hint}" />

        <CheckBox IsChecked="{Binding Model.UseApellations}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.Apellations}" />
        </CheckBox>

        <TextBlock Style="{StaticResource CommonText}" Foreground="White" TextWrapping="Wrap" Text="{x:Static lp:Resources.ApellationsHint}" />

        <CheckBox IsChecked="{Binding Model.DisplayAnswerOptionsOneByOne}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.DisplayAnswerOptionsOneByOne}" />
        </CheckBox>

        <CheckBox IsChecked="{Binding Model.DisplayAnswerOptionsLabels}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.DisplayAnswerOptionsLabels}" />
        </CheckBox>

        <TextBlock Text="{x:Static lp:Resources.ButtonPressMode}" Style="{StaticResource Header}" />

        <ComboBox
            Style="{StaticResource ComboBoxStyle}"
            Foreground="White"
            FontWeight="Light"
            ItemsSource="{Binding Source={StaticResource ButtonPressMode}}"
            SelectedValue="{Binding Model.ButtonPressMode}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource ButtonPressModeConverter}}" FontWeight="Light" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <CheckBox IsChecked="{Binding Model.PreloadRoundContent}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.PreloadRoundContent}" />
        </CheckBox>

        <CheckBox IsChecked="{Binding Model.IgnoreWrong}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.NoPenaltyForWrongAnswer}" />
        </CheckBox>

        <CheckBox IsChecked="{Binding Model.DisplaySources}" Style="{StaticResource HeaderBox}">
            <TextBlock Style="{StaticResource CheckText}" Margin="5,0,0,0" Text="{x:Static lp:Resources.DisplaySources}" />
        </CheckBox>

        <TextBlock Style="{StaticResource Header}" Text="{x:Static lp:Resources.ReadingSpeed}" />
        
        <TextBlock Style="{StaticResource CommonText}" Foreground="White" Text="{x:Static lp:Resources.CharactersPerSecond}" />

        <DockPanel>
            <local:NumericTextBox
                Style="{StaticResource {x:Type TextBox}}"
                DockPanel.Dock="Right"
                VerticalAlignment="Center"
                FontWeight="Light"
                Width="60"
                Margin="5,0,0,0"
                Padding="1"
                Text="{Binding Model.ReadingSpeed, UpdateSourceTrigger=PropertyChanged}"
                Minimum="1"
                Maximum="100" />

            <Slider Value="{Binding Model.ReadingSpeed}" Margin="-5,0,0,0" Maximum="100" Minimum="1" VerticalAlignment="Center" />
        </DockPanel>

        <TextBlock Style="{StaticResource Header}" Text="{x:Static lp:Resources.RandomRoundsCount}" />
        <local:NumericTextBox Style="{StaticResource {x:Type TextBox}}" DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,5,0,0" Padding="1" FontWeight="Light" Text="{Binding Model.RandomRoundsCount, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="6" />
        <TextBlock Style="{StaticResource Header}" Text="{x:Static lp:Resources.RandomThemesCount}" />
        <local:NumericTextBox Style="{StaticResource {x:Type TextBox}}" DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,5,0,0" Padding="1" FontWeight="Light" Text="{Binding Model.RandomThemesCount, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="12" />
        <TextBlock Style="{StaticResource Header}" Text="{x:Static lp:Resources.BaseCostForRandomPackage}" />
        <local:NumericTextBox Style="{StaticResource {x:Type TextBox}}" DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,5,0,0" Padding="1" FontWeight="Light" Text="{Binding Model.RandomQuestionsBasePrice, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="1000" />
    </StackPanel>
</Page>
