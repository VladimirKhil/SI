//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIGame.ViewModel.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIGame.ViewModel.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version.
        /// </summary>
        public static string About_Version {
            get {
                return ResourceManager.GetString("About_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A player with such name already exists.
        /// </summary>
        public static string AlreadyExists {
            get {
                return ResourceManager.GetString("AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Any.
        /// </summary>
        public static string Any {
            get {
                return ResourceManager.GetString("Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIGame.
        /// </summary>
        public static string App_Name {
            get {
                return ResourceManager.GetString("App_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your avatar is bigger than 1 MB. Other players will not see it.
        /// </summary>
        public static string AvatarTooBig {
            get {
                return ResourceManager.GetString("AvatarTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This pack can&apos;t be used to play on the server.
        /// </summary>
        public static string BadPackage {
            get {
                return ResourceManager.GetString("BadPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have to set your date of birth.
        /// </summary>
        public static string BirthDateRequired {
            get {
                return ResourceManager.GetString("BirthDateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на by game.
        /// </summary>
        public static string ByGame {
            get {
                return ResourceManager.GetString("ByGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can&apos;t ban bots.
        /// </summary>
        public static string CannotBanBots {
            get {
                return ResourceManager.GetString("CannotBanBots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can&apos;t ban yourself.
        /// </summary>
        public static string CannotBanYourself {
            get {
                return ResourceManager.GetString("CannotBanYourself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot connect to server.
        /// </summary>
        public static string CannotConnectToServer {
            get {
                return ResourceManager.GetString("CannotConnectToServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot join game.
        /// </summary>
        public static string CannotJoinGame {
            get {
                return ResourceManager.GetString("CannotJoinGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can&apos;t kick bots.
        /// </summary>
        public static string CannotKickBots {
            get {
                return ResourceManager.GetString("CannotKickBots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can&apos;t kick yourself.
        /// </summary>
        public static string CannotKickYouself {
            get {
                return ResourceManager.GetString("CannotKickYouself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot set bot as host.
        /// </summary>
        public static string CannotSetHostToBot {
            get {
                return ResourceManager.GetString("CannotSetHostToBot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your are host already!.
        /// </summary>
        public static string CannotSetHostToYourself {
            get {
                return ResourceManager.GetString("CannotSetHostToYourself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Account change.
        /// </summary>
        public static string ChangeAccount {
            get {
                return ResourceManager.GetString("ChangeAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while visiting the web-site to comment. Make sure you have a default browser.
        /// </summary>
        public static string CommentSiteError {
            get {
                return ResourceManager.GetString("CommentSiteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Common error.
        /// </summary>
        public static string CommonJoinError {
            get {
                return ResourceManager.GetString("CommonJoinError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Computer player.
        /// </summary>
        public static string ComputerPlayer {
            get {
                return ResourceManager.GetString("ComputerPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Authors contact.
        /// </summary>
        public static string ContactUri {
            get {
                return ResourceManager.GetString("ContactUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create.
        /// </summary>
        public static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t fine a created game.
        /// </summary>
        public static string CreatedGameNotFound {
            get {
                return ResourceManager.GetString("CreatedGameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creating the game....
        /// </summary>
        public static string Creating {
            get {
                return ResourceManager.GetString("Creating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to remore the player &apos;{0}&apos;?.
        /// </summary>
        public static string DeleteConfirm {
            get {
                return ResourceManager.GetString("DeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have disconnected.
        /// </summary>
        public static string DisconnectMessage {
            get {
                return ResourceManager.GetString("DisconnectMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Downloading file error.
        /// </summary>
        public static string DownloadFileError {
            get {
                return ResourceManager.GetString("DownloadFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot connect to server while uploading game report. The report will be sent later.
        /// </summary>
        public static string Error_SendingReport {
            get {
                return ResourceManager.GetString("Error_SendingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot upload avatar to address.
        /// </summary>
        public static string Error_UploadingAvatar {
            get {
                return ResourceManager.GetString("Error_UploadingAvatar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while visiting the site {0}. Make sure you have a system default browser selected..
        /// </summary>
        public static string ErrorMovingToSite {
            get {
                return ResourceManager.GetString("ErrorMovingToSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error while writing log to disc.
        /// </summary>
        public static string ErrorWritingLogToDisc {
            get {
                return ResourceManager.GetString("ErrorWritingLogToDisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export successfully completed.
        /// </summary>
        public static string ExportOk {
            get {
                return ResourceManager.GetString("ExportOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External link: {0} . External link download could be unsafe and is disabled.
        /// </summary>
        public static string ExternalLink {
            get {
                return ResourceManager.GetString("ExternalLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://vk.com/topic-135725718_34967839.
        /// </summary>
        public static string FeedbackLink {
            get {
                return ResourceManager.GetString("FeedbackLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File &quot;{0}&quot; loading error.
        /// </summary>
        public static string FileLoadError {
            get {
                return ResourceManager.GetString("FileLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file it too large.
        /// </summary>
        public static string FileTooLarge {
            get {
                return ResourceManager.GetString("FileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game closed due to the players disconnect.
        /// </summary>
        public static string GameClosedCauseEverybodyLeft {
            get {
                return ResourceManager.GetString("GameClosedCauseEverybodyLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game closed by server due to inactivity .
        /// </summary>
        public static string GameClosedMessage {
            get {
                return ResourceManager.GetString("GameClosedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game connection timeout.
        /// </summary>
        public static string GameConnectionTimeout {
            get {
                return ResourceManager.GetString("GameConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bad pack.
        /// </summary>
        public static string GameCreationError_BadPackage {
            get {
                return ResourceManager.GetString("GameCreationError_BadPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A game with such name already exists.
        /// </summary>
        public static string GameCreationError_DuplicateName {
            get {
                return ResourceManager.GetString("GameCreationError_DuplicateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game join error.
        /// </summary>
        public static string GameCreationError_JoinError {
            get {
                return ResourceManager.GetString("GameCreationError_JoinError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t create a game on the server due to absence of a pack.
        /// </summary>
        public static string GameCreationError_NoPackage {
            get {
                return ResourceManager.GetString("GameCreationError_NoPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your client is outdated. Please, update the game..
        /// </summary>
        public static string GameCreationError_ObsoleteVersion {
            get {
                return ResourceManager.GetString("GameCreationError_ObsoleteVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t create a game on the server due to an error.
        /// </summary>
        public static string GameCreationError_ServerError {
            get {
                return ResourceManager.GetString("GameCreationError_ServerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The server is in the maintenance. Please, try to log in later. We apologize for any inconvenience caused.
        /// </summary>
        public static string GameCreationError_ServerMaintainance {
            get {
                return ResourceManager.GetString("GameCreationError_ServerMaintainance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The server is not ready to start the game.
        /// </summary>
        public static string GameCreationError_ServerNotReady {
            get {
                return ResourceManager.GetString("GameCreationError_ServerNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The maximal amount of games in the server is exceeded. Please, wait..
        /// </summary>
        public static string GameCreationError_TooManyGames {
            get {
                return ResourceManager.GetString("GameCreationError_TooManyGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t creat a game due to an unknown error.
        /// </summary>
        public static string GameCreationError_UnknownReason {
            get {
                return ResourceManager.GetString("GameCreationError_UnknownReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong game settings.
        /// </summary>
        public static string GameCreationError_WrongSettings {
            get {
                return ResourceManager.GetString("GameCreationError_WrongSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game engine error.
        /// </summary>
        public static string GameEngineError {
            get {
                return ResourceManager.GetString("GameEngineError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Entering the game....
        /// </summary>
        public static string GameEntering {
            get {
                return ResourceManager.GetString("GameEntering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Questions are played sequentially.
        /// </summary>
        public static string GameModes_Sport_Hint {
            get {
                return ResourceManager.GetString("GameModes_Sport_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Questions are selected by players.
        /// </summary>
        public static string GameModes_Tv_Hint {
            get {
                return ResourceManager.GetString("GameModes_Tv_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game name.
        /// </summary>
        public static string GameName {
            get {
                return ResourceManager.GetString("GameName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game name is required.
        /// </summary>
        public static string GameNameRequired {
            get {
                return ResourceManager.GetString("GameNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game not found.
        /// </summary>
        public static string GameNotFound {
            get {
                return ResourceManager.GetString("GameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на classic.
        /// </summary>
        public static string GameRule_Classic {
            get {
                return ResourceManager.GetString("GameRule_Classic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ignore wrong.
        /// </summary>
        public static string GameRule_IgnoreWrong {
            get {
                return ResourceManager.GetString("GameRule_IgnoreWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на no falstarts.
        /// </summary>
        public static string GameRule_NoFalseStart {
            get {
                return ResourceManager.GetString("GameRule_NoFalseStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на oral.
        /// </summary>
        public static string GameRule_Oral {
            get {
                return ResourceManager.GetString("GameRule_Oral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ping penalty.
        /// </summary>
        public static string GameRule_PingPenalty {
            get {
                return ResourceManager.GetString("GameRule_PingPenalty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на simplified.
        /// </summary>
        public static string GameRule_Sport {
            get {
                return ResourceManager.GetString("GameRule_Sport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All.
        /// </summary>
        public static string GamesFilter_All {
            get {
                return ResourceManager.GetString("GamesFilter_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New.
        /// </summary>
        public static string GamesFilter_New {
            get {
                return ResourceManager.GetString("GamesFilter_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No password.
        /// </summary>
        public static string GamesFilter_NoPassword {
            get {
                return ResourceManager.GetString("GamesFilter_NoPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sport.
        /// </summary>
        public static string GamesFilter_Sport {
            get {
                return ResourceManager.GetString("GamesFilter_Sport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TV.
        /// </summary>
        public static string GamesFilter_Tv {
            get {
                return ResourceManager.GetString("GamesFilter_Tv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Created.
        /// </summary>
        public static string GameStage_Created {
            get {
                return ResourceManager.GetString("GameStage_Created", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Final.
        /// </summary>
        public static string GameStage_Final {
            get {
                return ResourceManager.GetString("GameStage_Final", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Finished.
        /// </summary>
        public static string GameStage_Finished {
            get {
                return ResourceManager.GetString("GameStage_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round.
        /// </summary>
        public static string GameStage_Round {
            get {
                return ResourceManager.GetString("GameStage_Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Started.
        /// </summary>
        public static string GameStage_Started {
            get {
                return ResourceManager.GetString("GameStage_Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The game has started.
        /// </summary>
        public static string GameStarted {
            get {
                return ResourceManager.GetString("GameStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Welcome to SIGame! The game will begin as soon as all the players and the showman press &quot;Ready&quot; button.
        /// </summary>
        public static string Greeting {
            get {
                return ResourceManager.GetString("Greeting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://vk.com/si_game.
        /// </summary>
        public static string GroupLink {
            get {
                return ResourceManager.GetString("GroupLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hint: you can press the answer button at any point of the screen using right mouse button or {0} key.
        /// </summary>
        public static string Hint {
            get {
                return ResourceManager.GetString("Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change the sum.
        /// </summary>
        public static string HintChangeSum {
            get {
                return ResourceManager.GetString("HintChangeSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Define if the answer is correct.
        /// </summary>
        public static string HintCheckAnswer {
            get {
                return ResourceManager.GetString("HintCheckAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make a stake.
        /// </summary>
        public static string HintMakeAStake {
            get {
                return ResourceManager.GetString("HintMakeAStake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select new active player.
        /// </summary>
        public static string HintSelectActivePlayer {
            get {
                return ResourceManager.GetString("HintSelectActivePlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a player to give the question to.
        /// </summary>
        public static string HintSelectCatPlayer {
            get {
                return ResourceManager.GetString("HintSelectCatPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a player to change his score.
        /// </summary>
        public static string HintSelectPlayerForSumChange {
            get {
                return ResourceManager.GetString("HintSelectPlayerForSumChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a question on the board.
        /// </summary>
        public static string HintSelectQuestion {
            get {
                return ResourceManager.GetString("HintSelectQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a player who is making a bet.
        /// </summary>
        public static string HintSelectStaker {
            get {
                return ResourceManager.GetString("HintSelectStaker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a player who is starting the round.
        /// </summary>
        public static string HintSelectStarter {
            get {
                return ResourceManager.GetString("HintSelectStarter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove a theme on the board.
        /// </summary>
        public static string HintSelectTheme {
            get {
                return ResourceManager.GetString("HintSelectTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the player who is removing the theme.
        /// </summary>
        public static string HintThemeDeleter {
            get {
                return ResourceManager.GetString("HintThemeDeleter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game host was set {0} to {1}.
        /// </summary>
        public static string HostChanged {
            get {
                return ResourceManager.GetString("HostChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import successfully completed.
        /// </summary>
        public static string ImportOk {
            get {
                return ResourceManager.GetString("ImportOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internal server error.
        /// </summary>
        public static string InternalServerError {
            get {
                return ResourceManager.GetString("InternalServerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid avatar data.
        /// </summary>
        public static string InvalidAvatarData {
            get {
                return ResourceManager.GetString("InvalidAvatarData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid role.
        /// </summary>
        public static string InvalidRole {
            get {
                return ResourceManager.GetString("InvalidRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is found at least twice.
        /// </summary>
        public static string IsDouble {
            get {
                return ResourceManager.GetString("IsDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Forbidden to join (you are banned).
        /// </summary>
        public static string JoinForbidden {
            get {
                return ResourceManager.GetString("JoinForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на QUESTION WITH A STAKE.
        /// </summary>
        public static string Label_Auction {
            get {
                return ResourceManager.GetString("Label_Auction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на QUESTION WITH A SECRET.
        /// </summary>
        public static string Label_CatInBag {
            get {
                return ResourceManager.GetString("Label_CatInBag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на QUESTION FOR YOURSELF.
        /// </summary>
        public static string Label_Sponsored {
            get {
                return ResourceManager.GetString("Label_Sponsored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while trying to follow the link. Please, make sure you have a default browser.
        /// </summary>
        public static string LinkError {
            get {
                return ResourceManager.GetString("LinkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local game.
        /// </summary>
        public static string LocalGame {
            get {
                return ResourceManager.GetString("LocalGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This login is forbidden on the server.
        /// </summary>
        public static string LoginForbidden {
            get {
                return ResourceManager.GetString("LoginForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while moving logs.
        /// </summary>
        public static string LogsMovingError {
            get {
                return ResourceManager.GetString("LogsMovingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIGame log.
        /// </summary>
        public static string LogTitle {
            get {
                return ResourceManager.GetString("LogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The connection is lost.
        /// </summary>
        public static string LostConnection {
            get {
                return ResourceManager.GetString("LostConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About.
        /// </summary>
        public static string MainMenu_About {
            get {
                return ResourceManager.GetString("MainMenu_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Best players.
        /// </summary>
        public static string MainMenu_BestPlayers {
            get {
                return ResourceManager.GetString("MainMenu_BestPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit.
        /// </summary>
        public static string MainMenu_Exit {
            get {
                return ResourceManager.GetString("MainMenu_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local game.
        /// </summary>
        public static string MainMenu_NetworkGame {
            get {
                return ResourceManager.GetString("MainMenu_NetworkGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Online game.
        /// </summary>
        public static string MainMenu_OnlineGame {
            get {
                return ResourceManager.GetString("MainMenu_OnlineGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single game.
        /// </summary>
        public static string MainMenu_SingleGame {
            get {
                return ResourceManager.GetString("MainMenu_SingleGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximum file size: {0} MB.
        /// </summary>
        public static string MaximumFileSize {
            get {
                return ResourceManager.GetString("MaximumFileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media file is not supported.
        /// </summary>
        public static string MediaFileNotSupported {
            get {
                return ResourceManager.GetString("MediaFileNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media load error.
        /// </summary>
        public static string MediaLoadError {
            get {
                return ResourceManager.GetString("MediaLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mixed.
        /// </summary>
        public static string Mixed {
            get {
                return ResourceManager.GetString("Mixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player&apos;s name is required.
        /// </summary>
        public static string NameRequired {
            get {
                return ResourceManager.GetString("NameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error while starting listening network: {0}. Network connections are unavailable..
        /// </summary>
        public static string NetworkOpeningError {
            get {
                return ResourceManager.GetString("NetworkOpeningError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New account.
        /// </summary>
        public static string NewAccount {
            get {
                return ResourceManager.GetString("NewAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New game.
        /// </summary>
        public static string NewGame {
            get {
                return ResourceManager.GetString("NewGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New AI player.
        /// </summary>
        public static string NewPlayer {
            get {
                return ResourceManager.GetString("NewPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на News.
        /// </summary>
        public static string News {
            get {
                return ResourceManager.GetString("News", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Showman.
        /// </summary>
        public static string NewShowman {
            get {
                return ResourceManager.GetString("NewShowman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next.
        /// </summary>
        public static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Licenses folder not found.
        /// </summary>
        public static string NoLicensesFolder {
            get {
                return ResourceManager.GetString("NoLicensesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log folder not found.
        /// </summary>
        public static string NoLogsFolder {
            get {
                return ResourceManager.GetString("NoLogsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Try to disable firewall or antivirus. Maybe the problem is with VPN or proxy server.
        /// </summary>
        public static string Online_Login_Hint {
            get {
                return ResourceManager.GetString("Online_Login_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game address.
        /// </summary>
        public static string OnlineGameAddress {
            get {
                return ResourceManager.GetString("OnlineGameAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A user with such name is already on the server.
        /// </summary>
        public static string OnlineUserConflict {
            get {
                return ResourceManager.GetString("OnlineUserConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Licenses folder opening error.
        /// </summary>
        public static string OpenLicensesError {
            get {
                return ResourceManager.GetString("OpenLicensesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log folder opening error: {0}.
        /// </summary>
        public static string OpenLogsError {
            get {
                return ResourceManager.GetString("OpenLogsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking the pack....
        /// </summary>
        public static string PackageCheck {
            get {
                return ResourceManager.GetString("PackageCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package name.
        /// </summary>
        public static string PackageName {
            get {
                return ResourceManager.GetString("PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на package not selected.
        /// </summary>
        public static string PackageNotSelected {
            get {
                return ResourceManager.GetString("PackageNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to remove the AI player {0}?.
        /// </summary>
        public static string PlayerDeleteConfirm {
            get {
                return ResourceManager.GetString("PlayerDeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The player already exists.
        /// </summary>
        public static string PlayerExists {
            get {
                return ResourceManager.GetString("PlayerExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The player&apos;s name is required.
        /// </summary>
        public static string PlayerNameRequired {
            get {
                return ResourceManager.GetString("PlayerNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Multimedia port {0} is alreay used (another game running?). Try to set another port in settings.
        /// </summary>
        public static string PortIsUsedError {
            get {
                return ResourceManager.GetString("PortIsUsedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The port number is required.
        /// </summary>
        public static string PortNumberRequired {
            get {
                return ResourceManager.GetString("PortNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preparing....
        /// </summary>
        public static string Preparing {
            get {
                return ResourceManager.GetString("Preparing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please, press the button right after the frame around the board appears.
        /// </summary>
        public static string PressButton {
            get {
                return ResourceManager.GetString("PressButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Online question library.
        /// </summary>
        public static string QuestionLibrary {
            get {
                return ResourceManager.GetString("QuestionLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question for all.
        /// </summary>
        public static string QuestionTypeForAll {
            get {
                return ResourceManager.GetString("QuestionTypeForAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question for all with stake.
        /// </summary>
        public static string QuestionTypeStakeForAll {
            get {
                return ResourceManager.GetString("QuestionTypeStakeForAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question with button.
        /// </summary>
        public static string QuestionTypeWithButton {
            get {
                return ResourceManager.GetString("QuestionTypeWithButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Random themes.
        /// </summary>
        public static string RandomPackageName {
            get {
                return ResourceManager.GetString("RandomPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Random server themes.
        /// </summary>
        public static string RandomServerThemes {
            get {
                return ResourceManager.GetString("RandomServerThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Random themes set.
        /// </summary>
        public static string RandomThemes {
            get {
                return ResourceManager.GetString("RandomThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection restored..
        /// </summary>
        public static string ReconnectedMessage {
            get {
                return ResourceManager.GetString("ReconnectedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection lost, reconnecting....
        /// </summary>
        public static string ReconnectingMessage {
            get {
                return ResourceManager.GetString("ReconnectingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rejoin error.
        /// </summary>
        public static string RejoinError {
            get {
                return ResourceManager.GetString("RejoinError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your comment about game and questions:.
        /// </summary>
        public static string ReportTip {
            get {
                return ResourceManager.GetString("ReportTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game report.
        /// </summary>
        public static string ReportTitle {
            get {
                return ResourceManager.GetString("ReportTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The right answer.
        /// </summary>
        public static string RightAnswer {
            get {
                return ResourceManager.GetString("RightAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The round themes are; Here are the themes of the round.
        /// </summary>
        public static string RoundThemes {
            get {
                return ResourceManager.GetString("RoundThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round {0}.
        /// </summary>
        public static string RoundTrailing {
            get {
                return ResourceManager.GetString("RoundTrailing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sending the pack to the server.
        /// </summary>
        public static string SendingPackageToServer {
            get {
                return ResourceManager.GetString("SendingPackageToServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server connection lost!.
        /// </summary>
        public static string ServerConnectionError {
            get {
                return ResourceManager.GetString("ServerConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The settings are set to default.
        /// </summary>
        public static string SettingsReset {
            get {
                return ResourceManager.GetString("SettingsReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set video avatar (vdo.ninja).
        /// </summary>
        public static string SetVideoAvatar {
            get {
                return ResourceManager.GetString("SetVideoAvatar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Showman&apos;s name is required.
        /// </summary>
        public static string ShomanNameRequired {
            get {
                return ResourceManager.GetString("ShomanNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to remove the showman {0}?.
        /// </summary>
        public static string ShowmanDeleteConfirm {
            get {
                return ResourceManager.GetString("ShowmanDeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Questions storage.
        /// </summary>
        public static string SIStorage {
            get {
                return ResourceManager.GetString("SIStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error while accessing the storage.
        /// </summary>
        public static string SIStorageCallError {
            get {
                return ResourceManager.GetString("SIStorageCallError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error while working the storage.
        /// </summary>
        public static string SIStorageError {
            get {
                return ResourceManager.GetString("SIStorageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while following the web-site ({0}). Make sure you have a default browser.
        /// </summary>
        public static string SiteNavigationError {
            get {
                return ResourceManager.GetString("SiteNavigationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://vk.com/topic-135725718_34975471.
        /// </summary>
        public static string ThemesLink {
            get {
                return ResourceManager.GetString("ThemesLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сhoosing a final round theme.
        /// </summary>
        public static string TimeSettings_ChoosingFinalTheme {
            get {
                return ResourceManager.GetString("TimeSettings_ChoosingFinalTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choosing a question.
        /// </summary>
        public static string TimeSettings_ChoosingQuestion {
            get {
                return ResourceManager.GetString("TimeSettings_ChoosingQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Thinking on final question.
        /// </summary>
        public static string TimeSettings_FinalThinking {
            get {
                return ResourceManager.GetString("TimeSettings_FinalThinking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Giving the &quot;Secret question&quot;.
        /// </summary>
        public static string TimeSettings_GivingCat {
            get {
                return ResourceManager.GetString("TimeSettings_GivingCat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Image display.
        /// </summary>
        public static string TimeSettings_ImageTime {
            get {
                return ResourceManager.GetString("TimeSettings_ImageTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Making a bet in an &quot;Stake question&quot; and in a final question.
        /// </summary>
        public static string TimeSettings_MakingStake {
            get {
                return ResourceManager.GetString("TimeSettings_MakingStake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pause while showing media.
        /// </summary>
        public static string TimeSettings_MediaDelay {
            get {
                return ResourceManager.GetString("TimeSettings_MediaDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partial image display.
        /// </summary>
        public static string TimeSettings_PartialImageTime {
            get {
                return ResourceManager.GetString("TimeSettings_PartialImageTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Entering the answer after pressing the button.
        /// </summary>
        public static string TimeSettings_PrintingAnswer {
            get {
                return ResourceManager.GetString("TimeSettings_PrintingAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Showing right answer.
        /// </summary>
        public static string TimeSettings_RightAnswer {
            get {
                return ResourceManager.GetString("TimeSettings_RightAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round.
        /// </summary>
        public static string TimeSettings_Round {
            get {
                return ResourceManager.GetString("TimeSettings_Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Making decisions and accepting answers by showman.
        /// </summary>
        public static string TimeSettings_ShowmanDecisions {
            get {
                return ResourceManager.GetString("TimeSettings_ShowmanDecisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Thinking on a question.
        /// </summary>
        public static string TimeSettings_ThinkingOnQuestion {
            get {
                return ResourceManager.GetString("TimeSettings_ThinkingOnQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Thinking on a special question.
        /// </summary>
        public static string TimeSettings_ThinkingOnSpecial {
            get {
                return ResourceManager.GetString("TimeSettings_ThinkingOnSpecial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have created too many games!.
        /// </summary>
        public static string TooManyGames {
            get {
                return ResourceManager.GetString("TooManyGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You created too much random pakages. Please try again later.
        /// </summary>
        public static string TooMuchRandomPackages {
            get {
                return ResourceManager.GetString("TooMuchRandomPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown error.
        /// </summary>
        public static string UnknownError {
            get {
                return ResourceManager.GetString("UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game update to version {0} found.
        /// </summary>
        public static string UpdateVersionMessage {
            get {
                return ResourceManager.GetString("UpdateVersionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The pack sending time is expired. Please, try again, or reduce the size of the file.
        /// </summary>
        public static string UploadPackageTimeout {
            get {
                return ResourceManager.GetString("UploadPackageTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User {0} was unbanned.
        /// </summary>
        public static string UserUnbanned {
            get {
                return ResourceManager.GetString("UserUnbanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while following the web-site ({0}). Make sure you have a default browser.
        /// </summary>
        public static string VKThemesError {
            get {
                return ResourceManager.GetString("VKThemesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Voice chat (Discord).
        /// </summary>
        public static string VoiceChatLink {
            get {
                return ResourceManager.GetString("VoiceChatLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid address format.
        /// </summary>
        public static string WrongAddressFormat {
            get {
                return ResourceManager.GetString("WrongAddressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You need to upgrade application to join this game.
        /// </summary>
        public static string YouNeedToUpgradeClientToJoinGame {
            get {
                return ResourceManager.GetString("YouNeedToUpgradeClientToJoinGame", resourceCulture);
            }
        }
    }
}
