<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ButtonPressed" xml:space="preserve">
    <value>Button press</value>
  </data>
  <data name="ConnectionError" xml:space="preserve">
    <value>Connection error: {0}</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FinalThemeRemoval" xml:space="preserve">
    <value>Deleting theme in the final round</value>
  </data>
  <data name="FinalThink" xml:space="preserve">
    <value>Final round thinking</value>
  </data>
  <data name="GameEndingError" xml:space="preserve">
    <value>Game end error: {0}</value>
  </data>
  <data name="GameEndsBecauseOfConnectionLoss" xml:space="preserve">
    <value>Connection to the demonstration computer has been terminated. The game is stopped.</value>
  </data>
  <data name="GamePackageLoadError" xml:space="preserve">
    <value>Error loading game package</value>
  </data>
  <data name="GameStart" xml:space="preserve">
    <value>Game start</value>
  </data>
  <data name="GameStartError" xml:space="preserve">
    <value>Game start error: {0}</value>
  </data>
  <data name="GameThemes" xml:space="preserve">
    <value>Game themes</value>
  </data>
  <data name="IpAddressHint" xml:space="preserve">
    <value>[Your IP address]</value>
  </data>
  <data name="LoggerCreationWarning" xml:space="preserve">
    <value>Log file creation error: {0}. Logging will not be performed.</value>
  </data>
  <data name="LoggerInitError" xml:space="preserve">
    <value>Error starting log recording</value>
  </data>
  <data name="LogsFolderNotSetWarning" xml:space="preserve">
    <value>Log directory is not specified. Logs will not be recorded.</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NoAnswer" xml:space="preserve">
    <value>No answer</value>
  </data>
  <data name="NoLicensesFolder" xml:space="preserve">
    <value>License folder not found</value>
  </data>
  <data name="NoRiskQuestion" xml:space="preserve">
    <value>Question for yourself without risk</value>
  </data>
  <data name="OpenLicensesError" xml:space="preserve">
    <value>Error opening license folder: {0}</value>
  </data>
  <data name="PackageAuthors" xml:space="preserve">
    <value>Package authors</value>
  </data>
  <data name="PackageComments" xml:space="preserve">
    <value>Package comments</value>
  </data>
  <data name="PackagePreparationError" xml:space="preserve">
    <value>Package preparation error</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PressTheButton" xml:space="preserve">
    <value>Press the button</value>
  </data>
  <data name="QuestionSelection" xml:space="preserve">
    <value>Question selection</value>
  </data>
  <data name="QuestionTypeForAll" xml:space="preserve">
    <value>Question For All</value>
  </data>
  <data name="QuestionTypeSecret" xml:space="preserve">
    <value>Question with Secret</value>
  </data>
  <data name="QuestionTypeSimple" xml:space="preserve">
    <value>Question with Button</value>
  </data>
  <data name="QuestionTypeStake" xml:space="preserve">
    <value>Question with Stake</value>
  </data>
  <data name="QuestionTypeStakeForAll" xml:space="preserve">
    <value>Question For All with Stake</value>
  </data>
  <data name="RightAnswer" xml:space="preserve">
    <value>Correct answer</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Round</value>
  </data>
  <data name="RoundStart" xml:space="preserve">
    <value>Round start</value>
  </data>
  <data name="RoundThemes" xml:space="preserve">
    <value>Round themes</value>
  </data>
  <data name="RoundTimeout" xml:space="preserve">
    <value>Round time has expired.</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="SecretQuestion" xml:space="preserve">
    <value>Secret question</value>
  </data>
  <data name="SelectAudioFile" xml:space="preserve">
    <value>Select audio file</value>
  </data>
  <data name="SelectBackgroundImage" xml:space="preserve">
    <value>Select background image</value>
  </data>
  <data name="SelectBackgroundVideo" xml:space="preserve">
    <value>Select background video file</value>
  </data>
  <data name="SelectIntroVideo" xml:space="preserve">
    <value>Select splash video file</value>
  </data>
  <data name="SelectLogoImage" xml:space="preserve">
    <value>Select splash image</value>
  </data>
  <data name="StakeQuestion" xml:space="preserve">
    <value>Stake question</value>
  </data>
  <data name="StartGame" xml:space="preserve">
    <value>Start game</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="WrongAnswer" xml:space="preserve">
    <value>Wrong answer</value>
  </data>
</root>