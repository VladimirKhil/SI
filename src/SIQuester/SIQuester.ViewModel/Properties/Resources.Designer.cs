//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIQuester.ViewModel.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIQuester.ViewModel.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About the program.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Credit.
        /// </summary>
        public static string Accept {
            get {
                return ResourceManager.GetString("Accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add a question.
        /// </summary>
        public static string AddQuestion {
            get {
                return ResourceManager.GetString("AddQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add a round.
        /// </summary>
        public static string AddRound {
            get {
                return ResourceManager.GetString("AddRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add a theme.
        /// </summary>
        public static string AddTheme {
            get {
                return ResourceManager.GetString("AddTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на and.
        /// </summary>
        public static string And {
            get {
                return ResourceManager.GetString("And", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Answer.
        /// </summary>
        public static string Answer {
            get {
                return ResourceManager.GetString("Answer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на API key not set.
        /// </summary>
        public static string ApiKeyNotSet {
            get {
                return ResourceManager.GetString("ApiKeyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Audio.
        /// </summary>
        public static string Audio {
            get {
                return ResourceManager.GetString("Audio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Audio file {0} is not set as a background.
        /// </summary>
        public static string AudioIsNotOnBackground {
            get {
                return ResourceManager.GetString("AudioIsNotOnBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author.
        /// </summary>
        public static string Author {
            get {
                return ResourceManager.GetString("Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Authors.
        /// </summary>
        public static string Authors {
            get {
                return ResourceManager.GetString("Authors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на https://vk.com/si_game.
        /// </summary>
        public static string AuthorSiteUrl {
            get {
                return ResourceManager.GetString("AuthorSiteUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author.
        /// </summary>
        public static string BaseAuthors {
            get {
                return ResourceManager.GetString("BaseAuthors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на based on the following examples.
        /// </summary>
        public static string BasedOnExamples {
            get {
                return ResourceManager.GetString("BasedOnExamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source.
        /// </summary>
        public static string BaseSources {
            get {
                return ResourceManager.GetString("BaseSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot create temporary file. Try to turn off antivirus software.
        /// </summary>
        public static string CannotCreateTemporaryFile {
            get {
                return ResourceManager.GetString("CannotCreateTemporaryFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot enable package quality control because of the errors:.
        /// </summary>
        public static string CannotEnableQuality {
            get {
                return ResourceManager.GetString("CannotEnableQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Championship.
        /// </summary>
        public static string Championship {
            get {
                return ResourceManager.GetString("Championship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на changeGroup is already activated!.
        /// </summary>
        public static string ChangeGroupIsActivated {
            get {
                return ResourceManager.GetString("ChangeGroupIsActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Comment.
        /// </summary>
        public static string Comment {
            get {
                return ResourceManager.GetString("Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Comments.
        /// </summary>
        public static string Comments {
            get {
                return ResourceManager.GetString("Comments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General knowledge.
        /// </summary>
        public static string CommonTag {
            get {
                return ResourceManager.GetString("CommonTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Common.
        /// </summary>
        public static string CommonTags {
            get {
                return ResourceManager.GetString("CommonTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to delete all unused media files in the package?.
        /// </summary>
        public static string ConfirmFilesRemoval {
            get {
                return ResourceManager.GetString("ConfirmFilesRemoval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conversion error.
        /// </summary>
        public static string ConversionError {
            get {
                return ResourceManager.GetString("ConversionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create topic {0} with {1} questions.
        /// </summary>
        public static string CreateTopicPrompt {
            get {
                return ResourceManager.GetString("CreateTopicPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question database.
        /// </summary>
        public static string DBStorage {
            get {
                return ResourceManager.GetString("DBStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The package is stored in the Database {0} under the name {1}.
        /// </summary>
        public static string DBStorageComment {
            get {
                return ResourceManager.GetString("DBStorageComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You need to create questions for quiz topic.
        ///
        ///1. Pick popular topic (if not provided). Examples: games, movies, anime, books, pop culture, social media, tech, memes, gen z fashion, trends, food and drinks, celebrities, fun facts, tv shows, music. Periodically pick less popular ones for diversity. The best way of crafting topics is to use topic names that could be connected to answers in different ways (like &quot;Stones&quot; topic could relate to some info about stones and also about Emma Stone). Topic name could  [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string DefaultGPTPrompt {
            get {
                return ResourceManager.GetString("DefaultGPTPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cars
        ///Alphabet
        ///Anime
        ///Astronomy
        ///Biology
        ///Geography
        ///Games: Consoles, Soundtracks, Board games
        ///Art
        ///History
        ///Movies: Directors, Actors, Awards
        ///Books: Comics
        ///Memes
        ///Mathematics
        ///Music: Rock, Pop, Rap, Jazz, Metal, Electronic, Covers, Classical music
        ///Cartoons
        ///Rebuses
        ///Comics
        ///TV series
        ///Mixed (hodgepodge)
        ///Sports: Football
        ///TV
        ///Science fiction
        ///Physics
        ///Chemistry
        ///Erudition: Intellectual games, Politics, Personalities
        ///Humor.
        /// </summary>
        public static string DefaultTags {
            get {
                return ResourceManager.GetString("DefaultTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Document loading.
        /// </summary>
        public static string DocumentLoading {
            get {
                return ResourceManager.GetString("DocumentLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Document save error.
        /// </summary>
        public static string DocumentSavingError {
            get {
                return ResourceManager.GetString("DocumentSavingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DOCX Documents.
        /// </summary>
        public static string DocxFiles {
            get {
                return ResourceManager.GetString("DocxFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package {0} has been modified. Do you want to save it?.
        /// </summary>
        public static string DoYouWantToSave {
            get {
                return ResourceManager.GetString("DoYouWantToSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Editors.
        /// </summary>
        public static string Editors {
            get {
                return ResourceManager.GetString("Editors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Untitled.
        /// </summary>
        public static string Empty {
            get {
                return ResourceManager.GetString("Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Empty.
        /// </summary>
        public static string EmptyValue {
            get {
                return ResourceManager.GetString("EmptyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stop.
        /// </summary>
        public static string End {
            get {
                return ResourceManager.GetString("End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error in numbering was found in the next topic. It is expected that the text of all questions in each topic starts with a number, sequentially increasing from question to question.
        /// </summary>
        public static string EnumerationError {
            get {
                return ResourceManager.GetString("EnumerationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attempt to insert a linked question!.
        /// </summary>
        public static string ErrorInsertingBindedQuestion {
            get {
                return ResourceManager.GetString("ErrorInsertingBindedQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export.
        /// </summary>
        public static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на export and print.
        /// </summary>
        public static string ExportAndPrint {
            get {
                return ResourceManager.GetString("ExportAndPrint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media export.
        /// </summary>
        public static string ExportMedia {
            get {
                return ResourceManager.GetString("ExportMedia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media export error.
        /// </summary>
        public static string ExportMediaError {
            get {
                return ResourceManager.GetString("ExportMediaError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export to table format.
        /// </summary>
        public static string ExportTableHeader {
            get {
                return ResourceManager.GetString("ExportTableHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на export to HTML.
        /// </summary>
        public static string ExportToHtml {
            get {
                return ResourceManager.GetString("ExportToHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIGame questions.
        /// </summary>
        public static string ExportToHtmlHeader {
            get {
                return ResourceManager.GetString("ExportToHtmlHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export to CNS format.
        /// </summary>
        public static string ExportToSns {
            get {
                return ResourceManager.GetString("ExportToSns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export to Steam.
        /// </summary>
        public static string ExportToSteam {
            get {
                return ResourceManager.GetString("ExportToSteam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable package quality control for Steam export.
        /// </summary>
        public static string ExportToSteamWarning {
            get {
                return ResourceManager.GetString("ExportToSteamWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External links are not allowed.
        /// </summary>
        public static string ExternalLinksAreForbidden {
            get {
                return ResourceManager.GetString("ExternalLinksAreForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to parse GPT response.
        /// </summary>
        public static string FailedToParseGPTResponse {
            get {
                return ResourceManager.GetString("FailedToParseGPTResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Insufficient number of questions.
        /// </summary>
        public static string FewQuestions {
            get {
                return ResourceManager.GetString("FewQuestions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (file…).
        /// </summary>
        public static string File {
            get {
                return ResourceManager.GetString("File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File {0} is contained in the package in different categories!.
        /// </summary>
        public static string FileInMultipleCategories {
            get {
                return ResourceManager.GetString("FileInMultipleCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File {0} is contained in the package twice!.
        /// </summary>
        public static string FileIsDuplicated {
            get {
                return ResourceManager.GetString("FileIsDuplicated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file is read-only!.
        /// </summary>
        public static string FileIsReadOnly {
            get {
                return ResourceManager.GetString("FileIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File open error.
        /// </summary>
        public static string FileOpenError {
            get {
                return ResourceManager.GetString("FileOpenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Files downloaded: {0}.
        /// </summary>
        public static string FilesDownloaded {
            get {
                return ResourceManager.GetString("FilesDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File search.
        /// </summary>
        public static string FileSearch {
            get {
                return ResourceManager.GetString("FileSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file size exceeds the allowable value for playing through the Game server ({0} MB)!.
        /// </summary>
        public static string FileSizeLimitExceed {
            get {
                return ResourceManager.GetString("FileSizeLimitExceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FINAL.
        /// </summary>
        public static string Final {
            get {
                return ResourceManager.GetString("Final", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FINAL.
        /// </summary>
        public static string FinalName {
            get {
                return ResourceManager.GetString("FinalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The next template fragment was not found: {0}.
        /// </summary>
        public static string FragmentNotFound {
            get {
                return ResourceManager.GetString("FragmentNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue.
        /// </summary>
        public static string Futher {
            get {
                return ResourceManager.GetString("Futher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GAME {0}.
        /// </summary>
        public static string GameNumber {
            get {
                return ResourceManager.GetString("GameNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File size exceeds 100 MB!.
        /// </summary>
        public static string GamePackageTooLarge {
            get {
                return ResourceManager.GetString("GamePackageTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Generate topic {0} with {1} hard quiz question that requires some time to think, some knowledge and maybe guessing. Each question has 3-4 sentences.
        /// </summary>
        public static string GPTCreateTopicFinalRoundPrompt {
            get {
                return ResourceManager.GetString("GPTCreateTopicFinalRoundPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Updates were found for the program from {0}. Download them now?.
        /// </summary>
        public static string HasUpdates {
            get {
                return ResourceManager.GetString("HasUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на How to use the program.
        /// </summary>
        public static string HowToUseApp {
            get {
                return ResourceManager.GetString("HowToUseApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HTML.
        /// </summary>
        public static string Html {
            get {
                return ResourceManager.GetString("Html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HTML Files.
        /// </summary>
        public static string HtmlFiles {
            get {
                return ResourceManager.GetString("HtmlFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Image.
        /// </summary>
        public static string Image {
            get {
                return ResourceManager.GetString("Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Images.
        /// </summary>
        public static string Images {
            get {
                return ResourceManager.GetString("Images", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In a column.
        /// </summary>
        public static string InColumn {
            get {
                return ResourceManager.GetString("InColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Info.
        /// </summary>
        public static string Info {
            get {
                return ResourceManager.GetString("Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Initial upload.
        /// </summary>
        public static string InitialUpload {
            get {
                return ResourceManager.GetString("InitialUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the address of the multimedia object.
        /// </summary>
        public static string InputMediaUri {
            get {
                return ResourceManager.GetString("InputMediaUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred.
        /// </summary>
        public static string InstallError {
            get {
                return ResourceManager.GetString("InstallError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File {0} has invalid extension {1}. Expected one of {2}.
        /// </summary>
        public static string InvalidFileExtension {
            get {
                return ResourceManager.GetString("InvalidFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File {0} exceeds maximum size {1} MB.
        /// </summary>
        public static string InvalidFileSize {
            get {
                return ResourceManager.GetString("InvalidFileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid update handle.
        /// </summary>
        public static string InvalidUpdateHandle {
            get {
                return ResourceManager.GetString("InvalidUpdateHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на REMAINDER.
        /// </summary>
        public static string Left {
            get {
                return ResourceManager.GetString("Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (link…).
        /// </summary>
        public static string Link {
            get {
                return ResourceManager.GetString("Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIQuester.
        /// </summary>
        public static string LocalProgramName {
            get {
                return ResourceManager.GetString("LocalProgramName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save the unprocessed part of the file to:.
        /// </summary>
        public static string LostFile {
            get {
                return ResourceManager.GetString("LostFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Multimedia file extension is not among recommended ones ({0})!.
        /// </summary>
        public static string MediaFileExtensionIsNotRecommended {
            get {
                return ResourceManager.GetString("MediaFileExtensionIsNotRecommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Multimedia file size exceeds recommended value ({0} MB)!.
        /// </summary>
        public static string MediaFileSizeExceedsRecommendedValue {
            get {
                return ResourceManager.GetString("MediaFileSizeExceedsRecommendedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на audio.
        /// </summary>
        public static string MircAudio {
            get {
                return ResourceManager.GetString("MircAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на image.
        /// </summary>
        public static string MircImage {
            get {
                return ResourceManager.GetString("MircImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на video.
        /// </summary>
        public static string MircVideo {
            get {
                return ResourceManager.GetString("MircVideo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Missing file.
        /// </summary>
        public static string MissingFile {
            get {
                return ResourceManager.GetString("MissingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Missing link.
        /// </summary>
        public static string MissingLink {
            get {
                return ResourceManager.GetString("MissingLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package logo: file {0} is missing!.
        /// </summary>
        public static string MissingLogoFile {
            get {
                return ResourceManager.GetString("MissingLogoFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name:.
        /// </summary>
        public static string NameOfPackage {
            get {
                return ResourceManager.GetString("NameOfPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Line break.
        /// </summary>
        public static string NewLine {
            get {
                return ResourceManager.GetString("NewLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New package.
        /// </summary>
        public static string NewPackage {
            get {
                return ResourceManager.GetString("NewPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Correct answer is missing.
        /// </summary>
        public static string NoAnswer {
            get {
                return ResourceManager.GetString("NoAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author&apos;s name is not entered!.
        /// </summary>
        public static string NoAuthorName {
            get {
                return ResourceManager.GetString("NoAuthorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Authors are missing.
        /// </summary>
        public static string NoAuthors {
            get {
                return ResourceManager.GetString("NoAuthors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package name is not entered!.
        /// </summary>
        public static string NoPackageName {
            get {
                return ResourceManager.GetString("NoPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question text is missing.
        /// </summary>
        public static string NoQuestion {
            get {
                return ResourceManager.GetString("NoQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No questions were found in the input file! Note that questions must have a cost multiple of 10, and each question must start on a new line..
        /// </summary>
        public static string NoQuestionsFound {
            get {
                return ResourceManager.GetString("NoQuestionsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No questions to generate.
        /// </summary>
        public static string NoQuestionsToGenerate {
            get {
                return ResourceManager.GetString("NoQuestionsToGenerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question for yourself without risk.
        /// </summary>
        public static string NoRiskQuestion {
            get {
                return ResourceManager.GetString("NoRiskQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source is missing.
        /// </summary>
        public static string NoSource {
            get {
                return ResourceManager.GetString("NoSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This number is not a question cost.
        /// </summary>
        public static string NotAQuestionNumber {
            get {
                return ResourceManager.GetString("NotAQuestionNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please CAREFULLY familiarize yourself with the proposed format. Note that errors when reading a file may occur even due to the absence of a line break symbol or a space..
        /// </summary>
        public static string Notice {
            get {
                return ResourceManager.GetString("Notice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number.
        /// </summary>
        public static string Number {
            get {
                return ResourceManager.GetString("Number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question count.
        /// </summary>
        public static string NumOfQuests {
            get {
                return ResourceManager.GetString("NumOfQuests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round count.
        /// </summary>
        public static string NumOfRounds {
            get {
                return ResourceManager.GetString("NumOfRounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Theme count.
        /// </summary>
        public static string NumOfThemes {
            get {
                return ResourceManager.GetString("NumOfThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Object is created in new format and could not be added to current package.
        /// </summary>
        public static string ObjectInNewFormat {
            get {
                return ResourceManager.GetString("ObjectInNewFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The next object was not found: {0}.
        /// </summary>
        public static string ObjectNotFound {
            get {
                return ResourceManager.GetString("ObjectNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на themes.
        /// </summary>
        public static string OfThemes {
            get {
                return ResourceManager.GetString("OfThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open autosave folder.
        /// </summary>
        public static string OpenAutosaveFolder {
            get {
                return ResourceManager.GetString("OpenAutosaveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open log folder.
        /// </summary>
        public static string OpenLogsFolder {
            get {
                return ResourceManager.GetString("OpenLogsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other.
        /// </summary>
        public static string OtherTypeQuestion {
            get {
                return ResourceManager.GetString("OtherTypeQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package.
        /// </summary>
        public static string Package {
            get {
                return ResourceManager.GetString("Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The same package as in the SIGame TV analogue.
        /// </summary>
        public static string PackageClassicDescription {
            get {
                return ResourceManager.GetString("PackageClassicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Standard SIGame package.
        /// </summary>
        public static string PackageClassicName {
            get {
                return ResourceManager.GetString("PackageClassicName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The question file is damaged! Try to extract data from it using an archiver (opening it as an archive).
        /// </summary>
        public static string PackageCorruptedHint {
            get {
                return ResourceManager.GetString("PackageCorruptedHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на or retrieve data from autosave.
        /// </summary>
        public static string PackageCorruptedHintAutoSave {
            get {
                return ResourceManager.GetString("PackageCorruptedHintAutoSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If it does not work, send the logs to the program author so that the problem can be avoided in the future..
        /// </summary>
        public static string PackageCorruptedHintLogs {
            get {
                return ResourceManager.GetString("PackageCorruptedHintLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package that shows different game features.
        /// </summary>
        public static string PackageDemoDescription {
            get {
                return ResourceManager.GetString("PackageDemoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Demo package.
        /// </summary>
        public static string PackageDemoName {
            get {
                return ResourceManager.GetString("PackageDemoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package without initial content.
        /// </summary>
        public static string PackageEmptyDescription {
            get {
                return ResourceManager.GetString("PackageEmptyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Empty package.
        /// </summary>
        public static string PackageEmptyName {
            get {
                return ResourceManager.GetString("PackageEmptyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package is created in new format and could not be added to current.
        /// </summary>
        public static string PackageInNewFormat {
            get {
                return ResourceManager.GetString("PackageInNewFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на currently, there is no space on the server to accept new packages.
        /// </summary>
        public static string PackageServerFull {
            get {
                return ResourceManager.GetString("PackageServerFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package with custom count of rounds, themes or questions.
        /// </summary>
        public static string PackageSpecialDescription {
            get {
                return ResourceManager.GetString("PackageSpecialDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom package.
        /// </summary>
        public static string PackageSpecialName {
            get {
                return ResourceManager.GetString("PackageSpecialName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A single round with themes.
        /// </summary>
        public static string PackageThemesCollectionDescription {
            get {
                return ResourceManager.GetString("PackageThemesCollectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Theme collection.
        /// </summary>
        public static string PackageThemesCollectionName {
            get {
                return ResourceManager.GetString("PackageThemesCollectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The input text does not match the template below. Please correct the template, after which the analysis of the input file will continue. Besides, you can simply correct the input text. Problem:.
        /// </summary>
        public static string PhraseTemplates {
            get {
                return ResourceManager.GetString("PhraseTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Played.
        /// </summary>
        public static string Played {
            get {
                return ResourceManager.GetString("Played", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preview upload.
        /// </summary>
        public static string PreviewUpload {
            get {
                return ResourceManager.GetString("PreviewUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to submit Workshop preview.
        /// </summary>
        public static string PreviewUploadError {
            get {
                return ResourceManager.GetString("PreviewUploadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preview uploaded successfully.
        /// </summary>
        public static string PreviewUploadSuccess {
            get {
                return ResourceManager.GetString("PreviewUploadSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIQuester.
        /// </summary>
        public static string ProgramName {
            get {
                return ResourceManager.GetString("ProgramName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Answer to the question.
        /// </summary>
        public static string QAnswer {
            get {
                return ResourceManager.GetString("QAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question text.
        /// </summary>
        public static string QText {
            get {
                return ResourceManager.GetString("QText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question.
        /// </summary>
        public static string Question {
            get {
                return ResourceManager.GetString("Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question count.
        /// </summary>
        public static string QuestionCount {
            get {
                return ResourceManager.GetString("QuestionCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question for all.
        /// </summary>
        public static string QuestionForAll {
            get {
                return ResourceManager.GetString("QuestionForAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question playback.
        /// </summary>
        public static string QuestionPlay {
            get {
                return ResourceManager.GetString("QuestionPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to delete template &quot;{0}&quot;?.
        /// </summary>
        public static string RemoveTemplateConfirm {
            get {
                return ResourceManager.GetString("RemoveTemplateConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на REMAINDER.
        /// </summary>
        public static string Rest {
            get {
                return ResourceManager.GetString("Rest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Files have been detected that were not correctly saved during the last work with the program. Restore them?.
        /// </summary>
        public static string RestoreConfirmation {
            get {
                return ResourceManager.GetString("RestoreConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restriction.
        /// </summary>
        public static string Restriction {
            get {
                return ResourceManager.GetString("Restriction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Correct answer.
        /// </summary>
        public static string RightAnswer {
            get {
                return ResourceManager.GetString("RightAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round.
        /// </summary>
        public static string Round {
            get {
                return ResourceManager.GetString("Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Round {0}.
        /// </summary>
        public static string RoundNameTemplate {
            get {
                return ResourceManager.GetString("RoundNameTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RTF Documents.
        /// </summary>
        public static string RtfFiles {
            get {
                return ResourceManager.GetString("RtfFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The original file has been modified. Save it?.
        /// </summary>
        public static string SaveFile {
            get {
                return ResourceManager.GetString("SaveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secret question without a question.
        /// </summary>
        public static string SecretNoQuestion {
            get {
                return ResourceManager.GetString("SecretNoQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secret question with announced cost.
        /// </summary>
        public static string SecretPublicPrice {
            get {
                return ResourceManager.GetString("SecretPublicPrice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secret question.
        /// </summary>
        public static string SecretQuestion {
            get {
                return ResourceManager.GetString("SecretQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to send the package.
        /// </summary>
        public static string SendPackageErrorHeader {
            get {
                return ResourceManager.GetString("SendPackageErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package successfully sent!.
        /// </summary>
        public static string SendPackageSuccess {
            get {
                return ResourceManager.GetString("SendPackageSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sending the package to the computer game.
        /// </summary>
        public static string SendToGame {
            get {
                return ResourceManager.GetString("SendToGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Separator.
        /// </summary>
        public static string Separator {
            get {
                return ResourceManager.GetString("Separator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIGame questions.
        /// </summary>
        public static string SIGameQuestions {
            get {
                return ResourceManager.GetString("SIGameQuestions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Regular.
        /// </summary>
        public static string Simple {
            get {
                return ResourceManager.GetString("Simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Simple.
        /// </summary>
        public static string SimpleQuestion {
            get {
                return ResourceManager.GetString("SimpleQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SI questions.
        /// </summary>
        public static string SIQuestions {
            get {
                return ResourceManager.GetString("SIQuestions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SIGame Question Library.
        /// </summary>
        public static string SIStorage {
            get {
                return ResourceManager.GetString("SIStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unrecognized text chunk will be added to the comments for the theme.
        /// </summary>
        public static string SkipPart {
            get {
                return ResourceManager.GetString("SkipPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unrecognized text chunk will be added to the comments for the package.
        /// </summary>
        public static string SkipTitle {
            get {
                return ResourceManager.GetString("SkipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source.
        /// </summary>
        public static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In the original text, reading ended where the text highlighting ends..
        /// </summary>
        public static string SourceFail {
            get {
                return ResourceManager.GetString("SourceFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sources.
        /// </summary>
        public static string Sources {
            get {
                return ResourceManager.GetString("Sources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Space.
        /// </summary>
        public static string Space {
            get {
                return ResourceManager.GetString("Space", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error searching for questions.
        /// </summary>
        public static string SplittingError {
            get {
                return ResourceManager.GetString("SplittingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question with stake for all.
        /// </summary>
        public static string StakeAllQuestion {
            get {
                return ResourceManager.GetString("StakeAllQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question with stake.
        /// </summary>
        public static string StakeQuestion {
            get {
                return ResourceManager.GetString("StakeQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Starting upload....
        /// </summary>
        public static string StartingUpload {
            get {
                return ResourceManager.GetString("StartingUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Statistics.
        /// </summary>
        public static string Statistic {
            get {
                return ResourceManager.GetString("Statistic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Steam is not running. Export is not possible.
        /// </summary>
        public static string SteamNotRunning {
            get {
                return ResourceManager.GetString("SteamNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The input file has been completely read! The entire file header is placed in the package comments. Please sort its content yourself. Total imported themes:.
        /// </summary>
        public static string Success {
            get {
                return ResourceManager.GetString("Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tags.
        /// </summary>
        public static string Tags {
            get {
                return ResourceManager.GetString("Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Template name.
        /// </summary>
        public static string TemplateName {
            get {
                return ResourceManager.GetString("TemplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Template with this name already exists!.
        /// </summary>
        public static string TemplateWithThisNameAlreadyExists {
            get {
                return ResourceManager.GetString("TemplateWithThisNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Text.
        /// </summary>
        public static string Text {
            get {
                return ResourceManager.GetString("Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Text files.
        /// </summary>
        public static string TextFiles {
            get {
                return ResourceManager.GetString("TextFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import text.
        /// </summary>
        public static string TextImport {
            get {
                return ResourceManager.GetString("TextImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Theme.
        /// </summary>
        public static string Theme {
            get {
                return ResourceManager.GetString("Theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Theme collection.
        /// </summary>
        public static string ThemesCollection {
            get {
                return ResourceManager.GetString("ThemesCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на theme selection.
        /// </summary>
        public static string ThemesSelection {
            get {
                return ResourceManager.GetString("ThemesSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Think!.
        /// </summary>
        public static string ThinkAll {
            get {
                return ResourceManager.GetString("ThinkAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export to Question Base.
        /// </summary>
        public static string ToBase {
            get {
                return ResourceManager.GetString("ToBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Total themes imported:.
        /// </summary>
        public static string TotalImport {
            get {
                return ResourceManager.GetString("TotalImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tour.
        /// </summary>
        public static string Tour {
            get {
                return ResourceManager.GetString("Tour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Transformation.
        /// </summary>
        public static string Transform {
            get {
                return ResourceManager.GetString("Transform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Trash.
        /// </summary>
        public static string Trash {
            get {
                return ResourceManager.GetString("Trash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question files (*.txt) | *.txt.
        /// </summary>
        public static string TxtFilesFilter {
            get {
                return ResourceManager.GetString("TxtFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not recognized:.
        /// </summary>
        public static string Undefined {
            get {
                return ResourceManager.GetString("Undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error canceling the operation. Contact the developer..
        /// </summary>
        public static string UndoError {
            get {
                return ResourceManager.GetString("UndoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unmatched template.
        /// </summary>
        public static string UnreadTemplate {
            get {
                return ResourceManager.GetString("UnreadTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There is unrecognized text.
        /// </summary>
        public static string Unrecognized {
            get {
                return ResourceManager.GetString("Unrecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unsupported fragment: {0}.
        /// </summary>
        public static string UnsupportedFragment {
            get {
                return ResourceManager.GetString("UnsupportedFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Package version {0} is not supported. Maximum supported version is {1}.
        /// </summary>
        public static string UnsupportedVersion {
            get {
                return ResourceManager.GetString("UnsupportedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nameless.
        /// </summary>
        public static string Untitled {
            get {
                return ResourceManager.GetString("Untitled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File {0} is not used. Delete it.
        /// </summary>
        public static string UnusedFile {
            get {
                return ResourceManager.GetString("UnusedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error during upload.
        /// </summary>
        public static string UploadError {
            get {
                return ResourceManager.GetString("UploadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Workshop item created successfully.
        /// </summary>
        public static string UploadSuccess {
            get {
                return ResourceManager.GetString("UploadSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Video.
        /// </summary>
        public static string Video {
            get {
                return ResourceManager.GetString("Video", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to create Workshop item.
        /// </summary>
        public static string WorkshopItemCreationError {
            get {
                return ResourceManager.GetString("WorkshopItemCreationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect bracket placement.
        /// </summary>
        public static string WrongBrackets {
            get {
                return ResourceManager.GetString("WrongBrackets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Question files (.xml) | *.xml.
        /// </summary>
        public static string XmlFilesFilter {
            get {
                return ResourceManager.GetString("XmlFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на XPS documents.
        /// </summary>
        public static string XpsFiles {
            get {
                return ResourceManager.GetString("XpsFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на YAML files.
        /// </summary>
        public static string YamlFiles {
            get {
                return ResourceManager.GetString("YamlFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на YAML files (.yaml) | *.yaml.
        /// </summary>
        public static string YamlFilesFilter {
            get {
                return ResourceManager.GetString("YamlFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your answer?.
        /// </summary>
        public static string YourAnswer {
            get {
                return ResourceManager.GetString("YourAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your themes:.
        /// </summary>
        public static string YourThemes {
            get {
                return ResourceManager.GetString("YourThemes", resourceCulture);
            }
        }
    }
}
