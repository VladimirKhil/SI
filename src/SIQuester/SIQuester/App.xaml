<Application
    x:Class="SIQuester.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:siq="clr-namespace:SIQuester"
    xmlns:siqcv="clr-namespace:SIQuester.Converters"
    xmlns:lc="clr-namespace:SIQuester.Converters"
    xmlns:lv="clr-namespace:SIQuester.View"
    xmlns:ls="clr-namespace:SIQuester.Selectors"
    xmlns:lb="clr-namespace:SIQuester.Behaviors"
    xmlns:p="clr-namespace:SIPackages;assembly=SIPackages"
    xmlns:pc="clr-namespace:SIPackages.Core;assembly=SIPackages"
    xmlns:util="clr-namespace:SIQuester.Utilities"
    xmlns:vm1="clr-namespace:SIQuester.ViewModel"
    xmlns:m="clr-namespace:SIQuester.Model;assembly=SIQuester.ViewModel"
    xmlns:vm="clr-namespace:SIQuester.ViewModel;assembly=SIQuester.ViewModel"
    xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:lp="clr-namespace:SIQuester.Properties"
    xmlns:vmp="clr-namespace:SIQuester.ViewModel.Properties;assembly=SIQuester.ViewModel"
    mc:Ignorable="d"
    Startup="Application_Startup"
    Exit="Application_Exit"
    DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <ResourceDictionary Source="/Icons.xaml" />
                <ResourceDictionary Source="View/Dictionaries/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="EmptyDataTemplate" />
            <ControlTemplate TargetType="ContentControl" x:Key="EmptyTemplate" />
            
            <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
            <siqcv:GreaterThanValueConverter BaseValue="0" x:Key="GreaterZero" />

            <siqcv:TextCollectionConverter2 x:Key="TextCollectionConverter2" />
            <siqcv:ListJoinConverter x:Key="ListJoinConverter" />
            <siqcv:FlatLayoutModeConverter x:Key="FlatLayoutModeConverter" />
            <siqcv:PriceConverter x:Key="PriceConverter" />
            <siqcv:NotNullConverter x:Key="NotNullConverter" />
            <siqcv:FalseToVisiblityConverter x:Key="FalseToVisiblityConverter" />
            <siqcv:EqualsMultiConverter x:Key="EqualsMultiConverter" />
            <lc:ContentCommandsConverter x:Key="ContentCommandsConverter" />

            <Style x:Key="WarningBox" TargetType="ContentControl">
                <Setter Property="Content" Value="{Binding ErrorMessage}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding ErrorMessage, Converter={StaticResource NotNullConverter}}" Value="True">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock
                                        ToolTip="{Binding}"
                                        Text="⚠️"
                                        VerticalAlignment="Center"
                                        Margin="5,0,5,0"
                                        Foreground="OrangeRed" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <util:StringList x:Key="Base">
                <x:Static Member="vmp:Resources.File" />
            </util:StringList>

            <util:StringList x:Key="Additional">
                <x:Static Member="vmp:Resources.File" />
                <x:Static Member="vmp:Resources.Link" />
            </util:StringList>

            <SolidColorBrush x:Key="MainBack" Color="#FFFBFBFF" />

            <m:QuestionTypesNamesNew x:Key="QTypesNew" />

            <ControlTemplate x:Key="QTextBoxScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
                <ScrollContentPresenter
                    x:Name="PART_ScrollContentPresenter"
                    CanContentScroll="{TemplateBinding CanContentScroll}"
                    CanHorizontallyScroll="False"
                    CanVerticallyScroll="False"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Content="{TemplateBinding Content}"
                    Grid.Column="0"
                    Margin="{TemplateBinding Padding}"
                    Grid.Row="0" />
            </ControlTemplate>

            <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

            <Style x:Key="CommonTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="SpellCheck.IsEnabled" Value="{Binding SpellChecking, Source={x:Static m:AppSettings.Default}}" />
                <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border
                                x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                                <ScrollViewer
                                    Template="{StaticResource QTextBoxScrollViewerTemplate}"
                                    x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Disabled"
                                    VerticalScrollBarVisibility="Hidden" />                                
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56" />
                                </Trigger>
                                
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
                                </Trigger>
                                
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LightTextBox" BasedOn="{StaticResource CommonTextBox}" TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ActiveBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#28717070" Offset="0"/>
                <GradientStop Color="#50717070" Offset="0.75"/>
                <GradientStop Color="#90717070" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#34C5EBFF" Offset="0"/>
                <GradientStop Color="#3481D8FF" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="ChildMenuItem" TargetType="MenuItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">                            
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle
                                    x:Name="Bg"
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeThickness="1"
                                    RadiusX="2"
                                    RadiusY="2"/>
                                
                                <Rectangle x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1" RadiusX="2" RadiusY="2" Margin="1" />
                                
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Grid.Column="2"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True"/>
                            </Grid>
                            
                            <ControlTemplate.Triggers>                                
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#D1DBF4FF"/>
                                </Trigger>
                                
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
                                    <Setter Property="Stroke" TargetName="Bg" Value="#8571CBF1"/>
                                </Trigger>
                                
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                                </Trigger>                                
                            </ControlTemplate.Triggers>                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SimpleMenuItem" TargetType="MenuItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">                            
                            <Grid SnapsToDevicePixels="true">                                
                                <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2" />
                                
                                <Rectangle
                                    x:Name="Bg"
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeThickness="1"
                                    RadiusX="1"
                                    RadiusY="1"
                                    Margin="1" />
                                
                                <Rectangle x:Name="InnerBorder" Margin="2" />
                                
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True"/>
                                
                                <Popup
                                    x:Name="PART_Popup"
                                    AllowsTransparency="true"
                                    HorizontalOffset="1"
                                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Bottom"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                    VerticalOffset="-1"
                                    Focusable="false">
                                    <Border Background="#F5F5F5" BorderBrush="#FF959595" BorderThickness="1">
                                        <ScrollViewer
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                            CanContentScroll="true">
                                            
                                            <ItemsPresenter
                                                Margin="2"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Grid.IsSharedSizeScope="true"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>                                
                            </Grid>
                            
                            <ControlTemplate.Triggers>                                
                                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                </Trigger>
                                
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                                    <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
                                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
                                </Trigger>
                                
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                                    <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                                </Trigger>
                                
                                <Trigger Property="IsSubmenuOpen" Value="true">
                                    <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                                    <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                                </Trigger>
                                
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                                </Trigger>                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Base resources -->
            <DataTemplate DataType="{x:Type BitmapImage}">
                <Image Source="{Binding}" Width="20" Height="20" />
            </DataTemplate>

            <siqcv:StringDictionary x:Key="RTypes">
                <x:Static x:Key="{x:Static pc:RoundTypes.Standart}" Member="lp:Resources.Table" />
                <x:Static x:Key="{x:Static pc:RoundTypes.Final}" Member="lp:Resources.ThemeList" />
            </siqcv:StringDictionary>

            <siqcv:MappedConverter x:Key="RoundTypeConverter" Map="{StaticResource RTypes}" />

            <util:QuestionTypeFilter x:Key="QTFilter" />
            <util:QuestionTypeNameFilter x:Key="QTNameFilter" />

            <CollectionViewSource
                x:Key="QuestionTypesNew"
                Source="{StaticResource QTypesNew}"
                util:CollectionViewSourceManager.Filter="{StaticResource QTFilter}" />

            <CollectionViewSource
                x:Key="QuestionTypesNamesNew"
                Source="{Binding Source={StaticResource QTypesNew},Path=Values}"
                util:CollectionViewSourceManager.Filter="{StaticResource QTNameFilter}" />

            <siqcv:MappedConverter x:Key="QuestionTypeConverterNew" Map="{StaticResource QuestionTypesNew}" />

            <siqcv:StringDictionary x:Key="QuestionParameterNames">
                <x:Static x:Key="{x:Static pc:QuestionParameterNames.Question}" Member="lp:Resources.Question" />
                <x:Static x:Key="{x:Static pc:QuestionParameterNames.Answer}" Member="lp:Resources.Answer" />
                <x:Static x:Key="{x:Static pc:QuestionParameterNames.Theme}" Member="lp:Resources.Theme" />
                <x:Static x:Key="{x:Static pc:QuestionParameterNames.Price}" Member="lp:Resources.Price" />
                <x:Static x:Key="{x:Static pc:QuestionParameterNames.SelectionMode}" Member="lp:Resources.SelectionMode" />
                <x:Static x:Key="{x:Static pc:QuestionParameterNames.AnswerType}" Member="lp:Resources.AnswerType" />
                <x:Static x:Key="{x:Static pc:QuestionParameterNames.AnswerOptions}" Member="lp:Resources.AnswerOptions" />
            </siqcv:StringDictionary>

            <siqcv:MappedConverter x:Key="QuestionParameterNamesConverter" Map="{StaticResource QuestionParameterNames}" />

            <siqcv:StringDictionary x:Key="SelectionModes">
                <x:Static x:Key="{x:Static pc:StepParameterValues.SetAnswererSelect_Any}" Member="lp:Resources.SetAnswererSelect_Any" />
                
                <x:Static
                    x:Key="{x:Static pc:StepParameterValues.SetAnswererSelect_ExceptCurrent}"
                    Member="lp:Resources.SetAnswererSelect_ExceptCurrent" />
            </siqcv:StringDictionary>

            <siqcv:MappedConverter x:Key="SelectionModesConverter" Map="{StaticResource SelectionModes}" />

            <siqcv:StringDictionary x:Key="AnswerTypes">
                <x:Static x:Key="{x:Static pc:StepParameterValues.SetAnswerTypeType_Text}" Member="lp:Resources.SetAnswerTypeType_Text" />
                <x:Static x:Key="{x:Static pc:StepParameterValues.SetAnswerTypeType_Select}" Member="lp:Resources.SetAnswerTypeType_Select" />
            </siqcv:StringDictionary>

            <SolidColorBrush x:Key="ItemOverBrush" Color="#FFE9E9FF" />
            <SolidColorBrush x:Key="ItemSelectedBrush" Color="#FFD5D5FF" />

            <Style x:Key="QTreeViewItem" TargetType="{x:Type TreeViewItem}" >
                <Setter Property="AllowDrop" Value="True" />
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="siq:SmartMenuManager.SmartMenu" Value="True" />
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border x:Name="HeaderArea" Grid.ColumnSpan="3" Background="Transparent" />

                                <ToggleButton IsChecked="{Binding IsExpanded}" ClickMode="Press" Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="16" />
                                            <Setter Property="FrameworkElement.Height" Value="16" />
                                            
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                            </Trigger>
                                                            
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <Button
                                    x:Name="Add"
                                    Grid.Column="1"
                                    Command="{Binding Add}"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    HorizontalAlignment="Left"
                                    ToolTip="{Binding AddHeader}"
                                    Visibility="Hidden"
                                    Width="19">
                                    <Path
                                        Stretch="Uniform"
                                        Fill="#FFAAAAAA"
                                        Margin="1"
                                        Data="{Binding Source={StaticResource app_add},Path=Data}" />
                                </Button>

                                <Border
                                    x:Name="Bd"
                                    HorizontalAlignment="Stretch"
                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                    Padding="{TemplateBinding Control.Padding}"
                                    Background="{TemplateBinding Panel.Background}"
                                    SnapsToDevicePixels="True"
                                    Grid.Column="2">
                                    <ContentPresenter
                                        x:Name="PART_Header"
                                        Content="{TemplateBinding HeaderedContentControl.Header}"
                                        ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                        ContentSource="Header"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>

                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
                            </Grid>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                                
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                                </Trigger>

                                <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource ItemOverBrush}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition SourceName="ItemsHost" Property="IsMouseOver" Value="False" />
                                    </MultiTrigger.Conditions>
                                    
                                    <Setter TargetName="Add" Property="UIElement.Visibility" Value="Visible" />
                                </MultiTrigger>

                                <DataTrigger Binding="{Binding Add}" Value="{x:Null}">
                                    <Setter TargetName="Add" Property="UIElement.Visibility" Value="Hidden" />
                                </DataTrigger>
                                
                                <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource ItemSelectedBrush}" />
                                </Trigger>
                                
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BlockStyleKey" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="DimGray" />
                <Setter Property="Margin" Value="0,0,3,0" />
            </Style>

            <SolidColorBrush x:Key="SecondHighlightColor" Color="#FFFFFF84" />

            <!--Default theme-->

            <SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#990000FF"/>
            <SolidColorBrush x:Key="ToolBarButtonHover" Color="#330000FF"/>
            <SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#FF0000FF"/>
            <SolidColorBrush x:Key="ToolBarButtonPressed" Color="#770000FF"/>
            <SolidColorBrush x:Key="ToolBarButtonChecked" Color="#E6F0FA"/>

            <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarButtonChecked}"/>
                                </Trigger>
                                
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="true"/>
                                        <Condition Property="IsChecked" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    
                                    <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
                                </MultiTrigger>
                                
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsKeyboardFocused" Value="true"/>
                                        <Condition Property="IsChecked" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    
                                    <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
                                </MultiTrigger>
                                
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="BorderBrush" Value="{StaticResource ToolBarButtonPressedBorder}"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}"/>
                                </Trigger>
                                
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}" />
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                                </Trigger>
                                
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}" />
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                                </Trigger>
                                
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonPressedBorder}" />
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}" />
                                </Trigger>
                                
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="HeaderedItemsControl.HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Margin="4,0,0,0" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CommandRoutedItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Style.Triggers>
                    <Trigger Property="Command" Value="{x:Null}">
                        <Setter Property="IsEnabled" Value="False" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ActionSeparatorStyleKey" TargetType="{x:Type MenuItem}" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Separator
                                HorizontalAlignment="Stretch"
                                IsEnabled="false"
                                Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
                <Setter Property="Margin" Value="0"/>
            </Style>

            <ls:DictionaryTemplateSelector x:Key="ContentSelector">
                <ls:DictionaryTemplateSelector.Templates>
                    <DataTemplate x:Key="{x:Type vm:DocumentLoaderViewModel}" DataType="{x:Type vm:DocumentLoaderViewModel}">
                        <siq:DocumentLoaderView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:QDocument}" DataType="{x:Type vm:QDocument}">
                        <siq:DocumentView />
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Type vm:AboutViewModel}" DataType="{x:Type vm:AboutViewModel}">
                        <siq:AboutView />
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Type vm:NewViewModel}" DataType="{x:Type vm:NewViewModel}">
                        <siq:NewView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:ImportTextViewModel}" DataType="{x:Type vm:ImportTextViewModel}">
                        <siq:ImportTextView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:ImportSIStorageViewModel}" DataType="{x:Type vm:ImportSIStorageViewModel}">
                        <siq:ImportSIStorageView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:ImportDBStorageViewModel}" DataType="{x:Type vm:ImportDBStorageViewModel}">
                        <siq:ImportDBStorageView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:ExportViewModel}" DataType="{x:Type vm:ExportViewModel}">
                        <siq:ExportView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:SettingsViewModel}" DataType="{x:Type vm:SettingsViewModel}">
                        <siq:SettingsView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:StatisticsViewModel}" DataType="{x:Type vm:StatisticsViewModel}">
                        <siq:StatisticsView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:SelectThemesViewModel}" DataType="{x:Type vm:SelectThemesViewModel}">
                        <siq:SelectThemesView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:ExportHtmlViewModel}" DataType="{x:Type vm:ExportHtmlViewModel}">
                        <siq:ExportHtmlView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:SearchFolderViewModel}" DataType="{x:Type vm:SearchFolderViewModel}">
                        <siq:SearchFolderView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:AuthorsStorageViewModel}" DataType="{x:Type vm:AuthorsStorageViewModel}">
                        <siq:TextsStorageView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:SourcesStorageViewModel}" DataType="{x:Type vm:SourcesStorageViewModel}">
                        <siq:TextsStorageView />
                    </DataTemplate>
                    
                    <DataTemplate x:Key="{x:Type vm:MediaStorageViewModel}" DataType="{x:Type vm:MediaStorageViewModel}">
                        <siq:MediaStorageView />
                    </DataTemplate>
                </ls:DictionaryTemplateSelector.Templates>
            </ls:DictionaryTemplateSelector>

            <Style x:Key="TitleButton" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Foreground" Value="White" />
            </Style>

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle
                                Margin="2"
                                SnapsToDevicePixels="true"
                                Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                StrokeThickness="1"
                                StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F0F0F0" Offset="0.0" />
                <GradientStop Color="#E5E5E5" Offset="1.0" />
            </LinearGradientBrush>
            
            <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC" />
            
            <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#ECF4FC" Offset="0.0" />
                <GradientStop Color="#DCECFC" Offset="1.0" />
            </LinearGradientBrush>
            
            <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
            <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
            <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
            <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
            <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
            
            <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                <Setter Property="Margin" Value="-1,0,0,0"/>
                <Setter Property="Padding" Value="6,2,6,2"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Border
                                    x:Name="mainBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,0"
                                    Background="{TemplateBinding Background}"
                                    Margin="0" />
                                
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    ContentSource="Header"
                                    Focusable="False"
                                    HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                </Trigger>
                                
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Selected.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Selected.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="SideHeader" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Margin" Value="5,5,0,3" />
            </Style>

            <Style x:Key="playButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                <Setter Property="Width" Value="50" />
                <Setter Property="Height" Value="25" />
                <Setter Property="ToolTip" Value="{x:Static lp:Resources.Start}" />
                
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Path Data="M0,0L11.6,6.7L0,13.4z" Fill="#555555" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="ToolTip" Value="Стоп" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Path Data="M0,0L3,0L3,12L0,12zM6,0L9,0L9,12L6,12z" Fill="#555555" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="playSlider" TargetType="Slider">
                <Setter Property="Width" Value="300" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Maximum" Value="100" />
                <Setter Property="IsMoveToPointEnabled" Value="True" />
                <Setter Property="Margin" Value="20,0,0,0" />
            </Style>

            <!-- FullTreeView start -->

            <Style x:Key="PackageStyle" BasedOn="{StaticResource QTreeViewItem}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static m:AppSettings.Default}}" />
                <Setter Property="FontSize" Value="{Binding FontSize, Source={x:Static m:AppSettings.Default}}" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
            </Style>

            <Style x:Key="ContextMenu2" TargetType="FrameworkElement">
                <Setter Property="FocusManager.IsFocusScope" Value="True" />
                <Setter Property="IsEnabled" Value="{Binding ElementName=main,Path=IsEnabled}" />
                
                <Setter
                    Property="lb:PlacementManager.PlacementTarget"
                    Value="{Binding PlacementTarget,Source={x:Static vm1:ActionMenuViewModel.Instance}}" />
                
                <Setter Property="Opacity" Value="0.3" />
                
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    
                    <Trigger Property="DataContext" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <siqcv:Multiplier x:Key="Multiplier" />

            <ControlTemplate x:Key="QTreeViewScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
                <DockPanel Background="{TemplateBinding Background}">
                    <ScrollBar
                        DockPanel.Dock="Right"
                        x:Name="PART_VerticalScrollBar"
                        AutomationProperties.AutomationId="VerticalScrollBar"
                        Cursor="Arrow"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        Minimum="0"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ViewportSize="{TemplateBinding ViewportHeight}"/>
                    
                    <ScrollContentPresenter
                        x:Name="PART_ScrollContentPresenter"
                        CanContentScroll="{TemplateBinding CanContentScroll}"
                        CanHorizontallyScroll="False"
                        CanVerticallyScroll="False"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Content="{TemplateBinding Content}"
                        Margin="{TemplateBinding Padding}" />
                </DockPanel>
            </ControlTemplate>

            <ControlTemplate x:Key="QTreeViewTemplate" TargetType="{x:Type TreeView}">
                <ScrollViewer
                    Template="{StaticResource QTreeViewScrollViewerTemplate}"
                    Background="{TemplateBinding Background}"
                    CanContentScroll="False"
                    Focusable="False"
                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                    <Grid>
                        <ItemsPresenter />
                        
                        <Grid Style="{StaticResource ContextMenu2}" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Border BorderThickness="1" BorderBrush="Gray">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" />
                                </Border.Effect>
                            </Border>
                            
                            <Border
                                Name="Bd1"
                                BorderThickness="1"
                                BorderBrush="Gray"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <Style x:Key="MenuButton" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <Image Source="{Binding}" Width="20" Height="20" Margin="3" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>

                                            <Setter Property="Margin" Value="2" />

                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.5" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>

                                        <Style
                                            x:Key="MenuSeparator"
                                            TargetType="Separator"
                                            BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                                        <Style x:Key="MenuMenu" TargetType="Menu">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Background" Value="Transparent" />
                                        </Style>

                                        <Style x:Key="MenuMenuHeader" TargetType="MenuItem">
                                            <Setter Property="VerticalAlignment" Value="Stretch" />
                                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                            
                                            <Setter Property="HeaderTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <ContentControl Name="root" Height="25" Width="25">
                                                            <Image Source="{Binding}" Margin="2" />
                                                        </ContentControl>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </StackPanel.Resources>
                                    
                                    <ContentControl DataContext="{Binding ActiveNode}" Content="{Binding}">
                                        <ContentControl.Resources>
                                            <siqcv:MultiCostSetterConverter x:Key="MultiCostSetterConverter" />

                                            <Style x:Key="SubMenuItem" TargetType="MenuItem">
                                                <Setter
                                                    Property="Command"
                                                    Value="{Binding DataContext.SetCosts, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Menu}}" />
                                                
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                
                                                <Setter Property="Header">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MultiCostSetterConverter}">
                                                            <Binding Path="BaseValue" />
                                                            <Binding Path="Increment" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>

                                            <Style x:Key="SubMenuItemQuestionType" TargetType="MenuItem">
                                                <Setter
                                                    Property="Command"
                                                    Value="{Binding DataContext.SetQuestionType, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Menu}}" />

                                                <Setter Property="CommandParameter" Value="{Binding Key}" />
                                                <Setter Property="Header" Value="{Binding Value}" />
                                            </Style>

                                            <Style x:Key="SubMenuItemAnswerType" TargetType="MenuItem">
                                                <Setter
                                                    Property="Command"
                                                    Value="{Binding DataContext.SetAnswerType, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Menu}}" />

                                                <Setter Property="CommandParameter" Value="{Binding Key}" />
                                                <Setter Property="Header" Value="{Binding Value}" />

                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource EqualsMultiConverter}">
                                                                <MultiBinding.Bindings>
                                                                    <Binding Path="Key" />

                                                                    <Binding
                                                                        Path="DataContext.Parameters.AnswerType"
                                                                        RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Menu}" />
                                                                </MultiBinding.Bindings>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>

                                                        <Setter Property="IsChecked" Value="True" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>

                                            <DataTemplate DataType="{x:Type vm:PackageViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.AddRound}"
                                                        Content="{StaticResource AddImage}"
                                                        Command="{Binding AddRound}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Separator Style="{StaticResource MenuSeparator}" />
                                                    
                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            Header="{StaticResource SumImage}"
                                                            ToolTip="{x:Static lp:Resources.FillPrices}"
                                                            ItemsSource="{Binding Source={x:Static m:AppSettings.Default}, Path=CostSetters}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource SubMenuItem}" />
                                                    </Menu>
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.SetTags}"
                                                        Command="{Binding AddTags}"
                                                        Style="{StaticResource MenuButton}">
                                                        <Button.ContentTemplate>
                                                            <DataTemplate>
                                                                <Path
                                                                    Width="20"
                                                                    Height="20"
                                                                    Stretch="Uniform"
                                                                    Fill="Black"
                                                                    Data="{Binding Source={StaticResource app_at},Path=Data}" />
                                                            </DataTemplate>
                                                        </Button.ContentTemplate>
                                                    </Button>
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.ChangeLanguage}"
                                                        Command="{Binding ChangeLanguage}"
                                                        Style="{StaticResource MenuButton}">
                                                        <Button.ContentTemplate>
                                                            <DataTemplate>
                                                                <Path
                                                                    Width="20"
                                                                    Height="20"
                                                                    Stretch="Uniform"
                                                                    Fill="Black"
                                                                    Data="{Binding Source={StaticResource app_language},Path=Data}" />
                                                            </DataTemplate>
                                                        </Button.ContentTemplate>
                                                    </Button>
                                                    
                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            ToolTip="{x:Static lp:Resources.SetLogo}"
                                                            Header="{StaticResource AddImageImage}"
                                                            Style="{StaticResource MenuMenuHeader}">                                                            
                                                            <MenuItem.ItemsSource>
                                                                <MultiBinding Converter="{StaticResource ListJoinConverter}">
                                                                    <Binding Source="{StaticResource Base}" />
                                                                    <Binding Path="Document.Images.Files" />
                                                                </MultiBinding>
                                                            </MenuItem.ItemsSource>
                                                            
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="MenuItem">
                                                                    <Setter
                                                                        Property="Command"
                                                                        Value="{Binding DataContext.SelectLogo, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Menu}}" />
                                                                    
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    
                                                                    <Setter Property="Header">
                                                                        <Setter.Value>
                                                                            <PriorityBinding>
                                                                                <Binding Path="Model.Name" />
                                                                                <Binding />
                                                                            </PriorityBinding>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                    </Menu>
                                                    
                                                    <Separator Style="{StaticResource MenuSeparator}" />
                                                    <Button ToolTip="{x:Static lp:Resources.Authors}" Content="{StaticResource AuthorsImageKey}" Command="{Binding AddAuthors}" Style="{StaticResource MenuButton}" />
                                                    <Button ToolTip="{x:Static lp:Resources.Sources}" Content="{StaticResource SourcesImageKey}" Command="{Binding AddSources}" Style="{StaticResource MenuButton}" />
                                                    <Button ToolTip="{x:Static lp:Resources.Comments}" Content="{StaticResource TextImage}" Command="{Binding AddComments}" Style="{StaticResource MenuButton}" />

                                                    <Separator Style="{StaticResource MenuSeparator}" />
                                                    <Button ToolTip="{x:Static lp:Resources.CopyInfo}" Content="{StaticResource CloneImage}" Command="{Binding CopyInfo}" Style="{StaticResource MenuButton}" />
                                                    <Button ToolTip="{x:Static lp:Resources.PasteInfo}" Content="{StaticResource PasteImage}" Command="{Binding PasteInfo}" Style="{StaticResource MenuButton}" />
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type vm:RoundViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button ToolTip="{x:Static lp:Resources.AddTheme}" Content="{StaticResource AddImage}"  Command="{Binding AddTheme}" Style="{StaticResource MenuButton}" />
                                                    <Button ToolTip="{x:Static lp:Resources.CloneRound}" Content="{StaticResource CloneImage}" Command="{Binding Clone}" Style="{StaticResource MenuButton}" />
                                                    <Button ToolTip="{x:Static lp:Resources.RemoveRound}" Content="{StaticResource RemoveImage}" Command="{Binding Remove}" Style="{StaticResource MenuButton}" />
                                                    
                                                    <Separator Style="{StaticResource MenuSeparator}" />
                                                    
                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            Header="{StaticResource SumImage}"
                                                            ToolTip="{x:Static lp:Resources.FillPrices}"
                                                            ItemsSource="{Binding Source={x:Static m:AppSettings.Default}, Path=CostSetters}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource SubMenuItem}" />
                                                    </Menu>
                                                    
                                                    <Separator Style="{StaticResource MenuSeparator}" />

                                                    <Button ToolTip="{x:Static lp:Resources.Authors}" Content="{StaticResource AuthorsImageKey}" Command="{Binding AddAuthors}" Style="{StaticResource MenuButton}" />
                                                    <Button ToolTip="{x:Static lp:Resources.Sources}" Content="{StaticResource SourcesImageKey}" Command="{Binding AddSources}" Style="{StaticResource MenuButton}" />
                                                    <Button ToolTip="{x:Static lp:Resources.Comments}" Content="{StaticResource TextImage}" Command="{Binding AddComments}" Style="{StaticResource MenuButton}" />
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type vm:ThemeViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.AddQuestion}"
                                                        Content="{StaticResource AddImage}"
                                                        Command="{Binding AddQuestion}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.AddEmptyQuestion}"
                                                        Content="{StaticResource AddEmptyImage}"
                                                        Command="{Binding AddEmptyQuestion}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.GenerateQuestions}"
                                                        Content="{StaticResource GenerateQuestionsImage}"
                                                        Command="{Binding GenerateQuestions}"
                                                        Style="{StaticResource MenuButton}"
                                                        IsEnabled="{Binding DataContext.Settings.UseGPT, RelativeSource={RelativeSource AncestorType=TreeView}}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.CloneTheme}"
                                                        Content="{StaticResource CloneImage}"
                                                        Command="{Binding Clone}"
                                                        Style="{StaticResource MenuButton}"/>
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.RemoveTheme}"
                                                        Content="{StaticResource RemoveImage}"
                                                        Command="{Binding Remove}"
                                                        Style="{StaticResource MenuButton}"/>
                                                    
                                                    <Separator Style="{StaticResource MenuSeparator}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.SortQuestionsByPrice}"
                                                        Content="{StaticResource SortImage}"
                                                        Command="{Binding SortQuestions}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.ShuffleQuestions}"
                                                        Content="{StaticResource ShuffleImage}"
                                                        Command="{Binding ShuffleQuestions}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            Header="{StaticResource SumImage}"
                                                            ToolTip="{x:Static lp:Resources.FillPrices}"
                                                            ItemsSource="{Binding Source={x:Static m:AppSettings.Default}, Path=CostSetters}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource SubMenuItem}" />
                                                    </Menu>
                                                    
                                                    <Separator Style="{StaticResource MenuSeparator}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Authors}"
                                                        Content="{StaticResource AuthorsImageKey}"
                                                        Command="{Binding AddAuthors}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Sources}"
                                                        Content="{StaticResource SourcesImageKey}"
                                                        Command="{Binding AddSources}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Comments}"
                                                        Content="{StaticResource TextImage}"
                                                        Command="{Binding AddComments}"
                                                        Style="{StaticResource MenuButton}" />
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type vm:QuestionViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.CloneQuestion}"
                                                        Content="{StaticResource CloneImage}"
                                                        Command="{Binding Clone}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.RemoveQuestion}"
                                                        Content="{StaticResource RemoveImage}"
                                                        Command="{Binding Remove}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Separator x:Name="separator1" Style="{StaticResource MenuSeparator}" />
                                                    
                                                    <Menu x:Name="type" Style="{StaticResource MenuMenu}">
                                                        <MenuItem x:Name="typesList"
                                                            Header="{StaticResource QuestionTypeImage}"
                                                            ToolTip="{x:Static lp:Resources.QuestionType}"
                                                            ItemsSource="{StaticResource QTypesNew}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource SubMenuItemQuestionType}" />
                                                    </Menu>

                                                    <Menu x:Name="answerType" Style="{StaticResource MenuMenu}">
                                                        <MenuItem x:Name="answerTypesList"
                                                            Header="{StaticResource AnswerTypeImage}"
                                                            ToolTip="{x:Static lp:Resources.AnswerType}"
                                                            ItemsSource="{StaticResource AnswerTypes}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource SubMenuItemAnswerType}" />
                                                    </Menu>

                                                    <Button x:Name="complexAnswer">
                                                        <Button.Style>
                                                            <Style TargetType="Button" BasedOn="{StaticResource MenuButton}">
                                                                <Setter Property="Command" Value="{Binding AddComplexAnswer}" />
                                                                <Setter Property="ToolTip" Value="{x:Static lp:Resources.AddComplexAnswer}" />
                                                                <Setter Property="Content" Value="{StaticResource AddMarkerImage}" />

                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Parameters.HasComplexAnswer}" Value="True">
                                                                        <Setter Property="Command" Value="{Binding RemoveComplexAnswer}" />
                                                                        <Setter Property="ToolTip" Value="{x:Static lp:Resources.RemoveComplexAnswer}" />
                                                                        <Setter Property="Content" Value="{StaticResource RemoveMarkerImage}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>

                                                    <Button
                                                        x:Name="wrong"
                                                        ToolTip="{x:Static lp:Resources.WrongAnswers}"
                                                        Content="{StaticResource WrongAnswersImage}"
                                                        Command="{Binding AddWrongAnswers}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        x:Name="play"
                                                        ToolTip="{x:Static lp:Resources.PlayQuestion}"
                                                        Content="{StaticResource PlayImage}"
                                                        Command="{Binding OwnerTheme.OwnerRound.OwnerPackage.Document.PlayQuestion}"
                                                        CommandParameter="{Binding}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Separator x:Name="separator2" Style="{StaticResource MenuSeparator}" />

                                                    <Button
                                                        x:Name="authors"
                                                        ToolTip="{x:Static lp:Resources.Authors}"
                                                        Content="{StaticResource AuthorsImageKey}"
                                                        Command="{Binding AddAuthors}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        x:Name="sources"
                                                        ToolTip="{x:Static lp:Resources.Sources}"
                                                        Content="{StaticResource SourcesImageKey}"
                                                        Command="{Binding AddSources}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        x:Name="comments"
                                                        ToolTip="{x:Static lp:Resources.Comments}"
                                                        Content="{StaticResource TextImage}"
                                                        Command="{Binding AddComments}"
                                                        Style="{StaticResource MenuButton}" />
                                                </StackPanel>
                                                
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Model.Price}" Value="{x:Static p:Question.InvalidPrice}">
                                                        <Setter TargetName="separator1" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="type" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="wrong" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="play" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="separator2" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="authors" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="sources" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="comments" Property="Visibility" Value="Collapsed" />
                                                        <Setter TargetName="complexAnswer" Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                    
                                    <ContentControl DataContext="{Binding ActiveItem}" Content="{Binding}">
                                        <ContentControl.Resources>
                                            <siqcv:MediaArgsConverter x:Key="MediaArgsConverter" />

                                            <Style x:Key="ContentCommands" TargetType="MenuItem">
                                                <Setter Property="Command" Value="{Binding Command}" />
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="CommandParameter" Value="{Binding Parameter}" />
                                            </Style>

                                            <Style x:Key="SubMenuItemLink" TargetType="MenuItem">
                                                <Setter
                                                    Property="Command"
                                                    Value="{Binding DataContext.LinkItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Menu}}" />
                                                
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                <Setter Property="Header" Value="{Binding}" />
                                            </Style>

                                            <Style x:Key="SubMenuItemTag" TargetType="MenuItem">
                                                <Setter
                                                    Property="Command"
                                                    Value="{Binding DataContext.AddTag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Menu}}" />
                                                
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                <Setter Property="Header" Value="{Binding}" />
                                            </Style>

                                            <DataTemplate DataType="{x:Type vm:PackageViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.RemoveLogo}"
                                                        Content="{StaticResource RemoveImage}"
                                                        Command="{Binding RemoveLogo}"
                                                        Style="{StaticResource MenuButton}" />
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type vm:TagsViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveLeft}"
                                                        Content="{StaticResource LeftImageKey}"
                                                        Command="{Binding MoveLeft}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Add}"
                                                        Content="{StaticResource AddImage}"
                                                        Command="{Binding AddItem}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Menu Name="menu" Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            Name="menuItem"
                                                            Header="…"
                                                            ToolTip="{x:Static lp:Resources.StandardValue}"
                                                            ItemsSource="{Binding OwnerDocument.StorageContext.Tags}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource SubMenuItemTag}">
                                                            <MenuItem.HeaderTemplate>
                                                                <DataTemplate>
                                                                    <ContentControl Name="root" Height="25" Width="25">
                                                                        <TextBlock Text="{Binding}" TextAlignment="Center" Margin="2" />
                                                                    </ContentControl>
                                                                </DataTemplate>
                                                            </MenuItem.HeaderTemplate>
                                                        </MenuItem>
                                                    </Menu>
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Delete}"
                                                        Content="{StaticResource RemoveImage}"
                                                        Command="{Binding RemoveItem}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveRight}"
                                                        Content="{StaticResource RightImageKey}"
                                                        Command="{Binding MoveRight}"
                                                        Style="{StaticResource MenuButton}" />
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type vm:ContentItemsViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveUp}"
                                                        Content="{StaticResource UpImage}"
                                                        Command="{Binding MoveLeft}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.AddText}"
                                                        Content="{StaticResource AddImage}"
                                                        Command="{Binding AddText}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.AddOral}"
                                                        Content="{StaticResource AddVoiceImage}"
                                                        Command="{Binding AddVoice}"
                                                        Style="{StaticResource MenuButton}"
                                                        Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}" />

                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            ToolTip="{x:Static lp:Resources.AddImage}"
                                                            Header="{StaticResource AddImageImage}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource ContentCommands}">
                                                            <MenuItem.ItemsSource>
                                                                <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                    <Binding />
                                                                    <Binding Path="OwnerDocument.Images.Files" />
                                                                    <Binding Source="{x:Static pc:ContentTypes.Image}" />
                                                                    <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                </MultiBinding>
                                                            </MenuItem.ItemsSource>
                                                        </MenuItem>
                                                    </Menu>

                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            ToolTip="{x:Static lp:Resources.AddAudio}"
                                                            Header="{StaticResource AddAudioImage}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource ContentCommands}"
                                                            Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}">
                                                            <MenuItem.ItemsSource>
                                                                <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                    <Binding />
                                                                    <Binding Path="OwnerDocument.Audio.Files" />
                                                                    <Binding Source="{x:Static pc:ContentTypes.Audio}" />
                                                                    <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                </MultiBinding>
                                                            </MenuItem.ItemsSource>
                                                        </MenuItem>
                                                    </Menu>

                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            ToolTip="{x:Static lp:Resources.AddVideo}"
                                                            Header="{StaticResource AddVideoImage}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource ContentCommands}"
                                                            Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}">
                                                            <MenuItem.ItemsSource>
                                                                <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                    <Binding />
                                                                    <Binding Path="OwnerDocument.Video.Files" />
                                                                    <Binding Source="{x:Static pc:ContentTypes.Video}" />
                                                                    <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                </MultiBinding>
                                                            </MenuItem.ItemsSource>
                                                        </MenuItem>
                                                    </Menu>

                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            x:Name="addHtml"
                                                            ToolTip="{x:Static lp:Resources.AddHtml}"
                                                            Header="{StaticResource AddHtmlImage}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource ContentCommands}"
                                                            Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}">
                                                            <MenuItem.ItemsSource>
                                                                <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                    <Binding />
                                                                    <Binding Path="OwnerDocument.Html.Files" />
                                                                    <Binding Source="{x:Static pc:ContentTypes.Html}" />
                                                                    <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                </MultiBinding>
                                                            </MenuItem.ItemsSource>
                                                        </MenuItem>
                                                    </Menu>

                                                    <Separator
                                                        Style="{StaticResource MenuSeparator}"
                                                        Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.ToggleToOralAndBack}"
                                                        Content="{StaticResource ChangeTypeImage}"
                                                        Command="{Binding ChangePlacement}"
                                                        Style="{StaticResource MenuButton}"
                                                        Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Delete}"
                                                        Content="{StaticResource RemoveImage}"
                                                        Command="{Binding RemoveItem}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.SetTime}"
                                                        Content="{StaticResource AddTimeImage}"
                                                        Command="{Binding SetTime}"
                                                        Style="{StaticResource MenuButton}"
                                                        Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}" />

                                                    <Button
                                                        Command="{Binding JoinWithNext}"
                                                        Visibility="{Binding IsTopLevel, Converter={StaticResource VisibilityConverter}}">
                                                        <Button.Style>
                                                            <Style TargetType="Button" BasedOn="{StaticResource MenuButton}">
                                                                <Setter Property="Content" Value="{StaticResource JoinWithNextImage}" />
                                                                <Setter Property="ToolTip" Value="{x:Static lp:Resources.JoinWithNext}" />

                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding CurrentItem.Model.WaitForFinish}" Value="False">
                                                                        <Setter Property="Content" Value="{StaticResource JoinWithNextActiveImage}" />
                                                                        <Setter Property="ToolTip" Value="{x:Static lp:Resources.UnlinkFromNext}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.CollapseMedia}"
                                                        Content="{StaticResource CollapseMediaImage}"
                                                        Command="{Binding CollapseMedia}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.ExpandMedia}"
                                                        Content="{StaticResource ExpandMediaImage}"
                                                        Command="{Binding ExpandMedia}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.ExportMediaCommand}"
                                                        Content="{StaticResource ExportMediaImage}"
                                                        Command="{Binding ExportMedia}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.NavigateToFile}"
                                                        Content="{StaticResource RightImageGrayKey}"
                                                        Command="{Binding NavigateToFile}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveDown}"
                                                        Content="{StaticResource DownImage}"
                                                        Command="{Binding MoveRight}"
                                                        Style="{StaticResource MenuButton}" />
                                                </StackPanel>

                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsTopLevel}" Value="False">
                                                        <Setter TargetName="addHtml" Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type vm:AnswersViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveLeft}"
                                                        Content="{StaticResource LeftImageKey}"
                                                        Command="{Binding MoveLeft}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.AddAnswer}"
                                                        Content="{StaticResource AddImage}"
                                                        Command="{Binding AddItem}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <StackPanel
                                                        Orientation="Horizontal"
                                                        Visibility="{Binding Owner.Parameters.HasComplexAnswer, Converter={StaticResource FalseToVisiblityConverter}}">
                                                        <Menu
                                                            Style="{StaticResource MenuMenu}"
                                                            Visibility="{Binding IsRight, Converter={StaticResource VisibilityConverter}}">
                                                            <MenuItem
                                                                ToolTip="{x:Static lp:Resources.AddImage}"
                                                                Header="{StaticResource AddImageImage}"
                                                                Style="{StaticResource MenuMenuHeader}"
                                                                ItemContainerStyle="{StaticResource ContentCommands}">
                                                                <MenuItem.ItemsSource>
                                                                    <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                        <Binding />
                                                                        <Binding Path="OwnerDocument.Images.Files" />
                                                                        <Binding Source="{x:Static pc:ContentTypes.Image}" />
                                                                        <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                    </MultiBinding>
                                                                </MenuItem.ItemsSource>
                                                            </MenuItem>
                                                        </Menu>

                                                        <Menu
                                                            Style="{StaticResource MenuMenu}"
                                                            Visibility="{Binding IsRight, Converter={StaticResource VisibilityConverter}}">
                                                            <MenuItem
                                                                ToolTip="{x:Static lp:Resources.AddAudio}"
                                                                Header="{StaticResource AddAudioImage}"
                                                                Style="{StaticResource MenuMenuHeader}"
                                                                ItemContainerStyle="{StaticResource ContentCommands}">
                                                                <MenuItem.ItemsSource>
                                                                    <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                        <Binding />
                                                                        <Binding Path="OwnerDocument.Audio.Files" />
                                                                        <Binding Source="{x:Static pc:ContentTypes.Audio}" />
                                                                        <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                    </MultiBinding>
                                                                </MenuItem.ItemsSource>
                                                            </MenuItem>
                                                        </Menu>

                                                        <Menu
                                                            Style="{StaticResource MenuMenu}"
                                                            Visibility="{Binding IsRight, Converter={StaticResource VisibilityConverter}}">
                                                            <MenuItem
                                                                ToolTip="{x:Static lp:Resources.AddVideo}"
                                                                Header="{StaticResource AddVideoImage}"
                                                                Style="{StaticResource MenuMenuHeader}"
                                                                ItemContainerStyle="{StaticResource ContentCommands}">
                                                                <MenuItem.ItemsSource>
                                                                    <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                        <Binding />
                                                                        <Binding Path="OwnerDocument.Video.Files" />
                                                                        <Binding Source="{x:Static pc:ContentTypes.Video}" />
                                                                        <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                    </MultiBinding>
                                                                </MenuItem.ItemsSource>
                                                            </MenuItem>
                                                        </Menu>

                                                        <Menu
                                                            Style="{StaticResource MenuMenu}"
                                                            Visibility="{Binding IsRight, Converter={StaticResource VisibilityConverter}}">                                                            
                                                            <MenuItem
                                                                ToolTip="{x:Static lp:Resources.AddHtml}"
                                                                Header="{StaticResource AddHtmlImage}"
                                                                Style="{StaticResource MenuMenuHeader}"
                                                                ItemContainerStyle="{StaticResource ContentCommands}">
                                                                <MenuItem.ItemsSource>
                                                                    <MultiBinding Converter="{StaticResource ContentCommandsConverter}">
                                                                        <Binding />
                                                                        <Binding Path="OwnerDocument.Html.Files" />
                                                                        <Binding Source="{x:Static pc:ContentTypes.Html}" />
                                                                        <Binding Path="Owner.OwnerTheme.OwnerRound.OwnerPackage.HasQualityControl" />
                                                                    </MultiBinding>
                                                                </MenuItem.ItemsSource>
                                                            </MenuItem>
                                                        </Menu>
                                                    </StackPanel>

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.RemoveAnswer}"
                                                        Content="{StaticResource RemoveImage}"
                                                        Command="{Binding RemoveItem}"
                                                        Style="{StaticResource MenuButton}" />
                                                    
                                                    <Menu Style="{StaticResource MenuMenu}">
                                                        <MenuItem Header="{StaticResource Selection}" ToolTip="{x:Static lp:Resources.Advanced}" Style="{StaticResource MenuMenuHeader}">
                                                            <MenuItem Header="{x:Static lp:Resources.SelectedToNewAnswer}" Command="{Binding ToNewAnswer}" CommandParameter="{Binding}" />
                                                            <MenuItem Header="{x:Static lp:Resources.SelectedToNewSource}" Command="{Binding ToNewSource}" CommandParameter="{Binding}" />
                                                            <MenuItem Header="{x:Static lp:Resources.SelectedToNewComment}" Command="{Binding ToNewComment}" CommandParameter="{Binding}" />
                                                            <MenuItem Header="{x:Static lp:Resources.LastWordToNewAnswer}" Command="{Binding AnswerSpecial1}" />
                                                            <MenuItem Header="{x:Static lp:Resources.BracketsContentToComment}" Command="{Binding AnswerSpecial2}" />
                                                            <MenuItem Header="{x:Static lp:Resources.DuplicateAnd}" Command="{Binding AnswerSpecial3}" />
                                                        </MenuItem>
                                                    </Menu>
                                                    
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveRight}"
                                                        Content="{StaticResource RightImageKey}"
                                                        Command="{Binding MoveRight}"
                                                        Style="{StaticResource MenuButton}" />
                                                </StackPanel>
                                            </DataTemplate>

                                            <DataTemplate DataType="{x:Type vm:LinksViewModel}">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveLeft}"
                                                        Content="{StaticResource LeftImageKey}"
                                                        Command="{Binding MoveLeft}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Add}"
                                                        Content="{StaticResource AddImage}"
                                                        Command="{Binding AddItem}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Menu Name="menu" Style="{StaticResource MenuMenu}">
                                                        <MenuItem
                                                            Name="menuItem"
                                                            Header="…"
                                                            ToolTip="Ссылка"
                                                            ItemsSource="{Binding Converter={StaticResource TextCollectionConverter2}}"
                                                            Style="{StaticResource MenuMenuHeader}"
                                                            ItemContainerStyle="{StaticResource SubMenuItemLink}">
                                                            <MenuItem.HeaderTemplate>
                                                                <DataTemplate>
                                                                    <ContentControl Name="root" Height="25" Width="25">
                                                                        <TextBlock Text="{Binding}" TextAlignment="Center" Margin="2" />
                                                                    </ContentControl>
                                                                </DataTemplate>
                                                            </MenuItem.HeaderTemplate>
                                                        </MenuItem>
                                                    </Menu>

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.Delete}"
                                                        Content="{StaticResource RemoveImage}"
                                                        Command="{Binding RemoveItem}"
                                                        Style="{StaticResource MenuButton}" />

                                                    <Button
                                                        ToolTip="{x:Static lp:Resources.MoveRight}"
                                                        Content="{StaticResource RightImageKey}"
                                                        Command="{Binding MoveRight}"
                                                        Style="{StaticResource MenuButton}" />
                                                </StackPanel>

                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Items.Count,ElementName=menuItem}" Value="0">
                                                        <Setter TargetName="menu" Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Grid>
                </ScrollViewer>
            </ControlTemplate>

            <Style x:Key="QTreeView" TargetType="TreeView">
                <Setter Property="ItemsSource" Value="{Binding Packages}" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="Background" Value="{StaticResource MainBack}" />
                <Setter Property="vm1:TreeViewHelper.WatchSelection" Value="True" />
                <Setter Property="vm1:TreeViewHelper.SelectedItem" Value="{Binding ActiveNode, Mode=OneWayToSource}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource PackageStyle}" />
                <Setter Property="Template" Value="{StaticResource QTreeViewTemplate}" />
            </Style>

            <Style x:Key="RoundStyle" BasedOn="{StaticResource QTreeViewItem}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
            </Style>

            <DataTemplate x:Key="Restrictions">
                <DockPanel>
                    <TextBlock
                        Text="{x:Static lp:Resources.Restriction}"
                        Style="{StaticResource BlockStyleKey}"
                        VerticalAlignment="Center"
                        Width="150"
                        Height="25"
                        Padding="0,2,0,0" />
                    
                    <TextBox
                        siq:ActivateManager.IsWatching="True"
                        Style="{StaticResource LightTextBox}"
                        MinWidth="90"
                        Text="{Binding Model.Restriction}" />
                </DockPanel>
            </DataTemplate>

            <Style x:Key="RestrictionsStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Model.Restriction.Length, Converter={StaticResource GreaterZero}}" Value="true">
                        <Setter Property="ContentTemplate" Value="{StaticResource Restrictions}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <siqcv:CollectionConverter x:Key="CollectionConverter" />

            <Style x:Key="TagsViewStyle" TargetType="ContentControl">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Button
                                Content="{x:Static lp:Resources.SetTags}"
                                Command="{Binding AddTags}"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                Background="#FFEEEEEE"
                                Foreground="Red"
                                FontSize="20"
                                HorizontalAlignment="Left"
                                Padding="8,2" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Tags.Count, Converter={StaticResource GreaterZero}}" Value="true">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <DockPanel>
                                        <Button
                                            DockPanel.Dock="Right"
                                            ToolTip="{x:Static lp:Resources.SetTags}"
                                            Command="{Binding AddTags}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Width="25"
                                            Cursor="Hand"
                                            HorizontalAlignment="Left"
                                            Padding="2">
                                            <Path Stretch="Uniform" Fill="#555555" Margin="3" Data="{Binding Source={StaticResource app_edit},Path=Data}" />
                                        </Button>

                                        <TextBox
                                            Text="{Binding Tags, Converter={StaticResource CollectionConverter}, Mode=OneWay}"
                                            IsReadOnly="True"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            TextWrapping="Wrap"
                                            VerticalAlignment="Center" />
                                    </DockPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="Tags">
                <DockPanel>
                    <TextBlock
                        Text="{x:Static lp:Resources.Tags}"
                        Style="{StaticResource BlockStyleKey}"
                        VerticalAlignment="Center"
                        Width="150"
                        Height="25"
                        Padding="0,2,0,0" />
                    
                    <ContentControl Content="{Binding}" Style="{StaticResource TagsViewStyle}" />
                </DockPanel>
            </DataTemplate>

            <Style x:Key="TagsStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource Tags}" />
            </Style>

            <DataTemplate x:Key="Quality">
                <DockPanel>
                    <TextBlock
                        Text="{x:Static lp:Resources.QualityControl}"
                        Style="{StaticResource BlockStyleKey}"
                        VerticalAlignment="Center"
                        Width="150"
                        Height="25"
                        Padding="0,2,0,0" />

                    <CheckBox
                        IsChecked="{Binding HasQualityControl}"
                        VerticalAlignment="Center" />
                </DockPanel>
            </DataTemplate>

            <Style x:Key="QualityStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource Quality}" />
            </Style>

            <DataTemplate x:Key="Publisher">
                <DockPanel>
                    <TextBlock
                        Text="{x:Static lp:Resources.Publisher}"
                        Style="{StaticResource BlockStyleKey}"
                        VerticalAlignment="Center"
                        Width="150"
                        Height="25"
                        Padding="0,2,0,0" />
                    
                    <ComboBox
                        siq:ActivateManager.IsWatching="True"
                        Style="{StaticResource ComboBoxCommon}"
                        MinWidth="90"
                        ItemsSource="{Binding DataContext.StorageContext.Publishers, RelativeSource={RelativeSource AncestorType=TreeView}}"
                        Text="{Binding Model.Publisher}"
                        VerticalContentAlignment="Center"
                        IsEditable="True" />
                </DockPanel>
            </DataTemplate>

            <siqcv:LanguageConverter x:Key="LanguageConverter" />
            
            <DataTemplate x:Key="Language">
                <DockPanel>
                    <TextBlock
                        Text="{x:Static lp:Resources.Language}"
                        Style="{StaticResource BlockStyleKey}"
                        VerticalAlignment="Center"
                        Width="150"
                        Height="25"
                        Padding="0,2,0,0" />

                    <ComboBox
                        siq:ActivateManager.IsWatching="True"
                        Style="{StaticResource ComboBoxCommon}"
                        MinWidth="90"
                        ItemsSource="{Binding DataContext.StorageContext.Languages, RelativeSource={RelativeSource AncestorType=TreeView}}"
                        SelectedItem="{Binding Model.Language}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource LanguageConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </DockPanel>
            </DataTemplate>

            <Style x:Key="ContactUrlStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock
                                    Text="{x:Static lp:Resources.ContactUri}"
                                    Style="{StaticResource BlockStyleKey}"
                                    VerticalAlignment="Center"
                                    Width="150"
                                    Height="25"
                                    Padding="0,2,0,0" />

                                <TextBox
                                    Style="{StaticResource LightTextBox}"
                                    MinWidth="90"
                                    Text="{Binding Model.ContactUri}" />
                            </DockPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LanguageStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource Language}" />
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Model.Language}" Value="">
                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="Difficulty">
                <DockPanel>
                    <TextBlock
                        Text="{x:Static lp:Resources.Difficulty}"
                        Style="{StaticResource BlockStyleKey}"
                        VerticalAlignment="Center"
                        Width="150"
                        Height="25"
                        Padding="0,2,0,0" />
                    
                    <metro:NumericUpDown
                        Speedup="False"
                        Minimum="1"
                        Maximum="10"
                        Value="{Binding Model.Difficulty}"
                        HorizontalContentAlignment="Left"
                        BorderThickness="0"
                        Background="Transparent"
                        FontSize="15">
                        <metro:NumericUpDown.Resources>
                            <Style TargetType="RepeatButton">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </metro:NumericUpDown.Resources>
                        
                        <metro:NumericUpDown.Style>
                            <Style TargetType="metro:NumericUpDown">
                                <Setter Property="HideUpDownButtons" Value="True" />
                                
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="HideUpDownButtons" Value="False" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </metro:NumericUpDown.Style>
                    </metro:NumericUpDown>
                </DockPanel>
            </DataTemplate>

            <Style x:Key="mediaBorder" TargetType="Border">
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="lb:FocusableBorder.IsAttached" Value="True" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Width" Value="400" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="Blue" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <siqcv:ImageConverter x:Key="ImageConverter" />

            <Style x:Key="LogoViewStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Source="{Binding Logo.Uri, Converter={StaticResource ImageConverter}}" HorizontalAlignment="Center" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Logo}" Value="{x:Null}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Button
                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                        Width="80"
                                        Height="80"
                                        ToolTip="{x:Static lp:Resources.SetLogo}"
                                        Cursor="Hand"
                                        Padding="0"
                                        Command="{Binding SelectLogo}">
                                        <Image Source="Resources/logo.jpg" />
                                    </Button>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="Logo">
                <Border
                    x:Name="border"
                    Style="{StaticResource mediaBorder}"
                    ToolTip="{x:Static lp:Resources.PackageLogo}"
                    Width="Auto"
                    MaxHeight="100"
                    Margin="0,5,10,5"
                    Padding="3"
                    siq:SmartMenuManager.SecondMenu="True">
                    <ContentControl Style="{StaticResource LogoViewStyle}" Content="{Binding}" />
                </Border>

                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="border" Property="BorderBrush" Value="LightBlue" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="LogoStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource Logo}" />
            </Style>

            <HierarchicalDataTemplate
                DataType="{x:Type vm:PackageViewModel}"
                ItemsSource="{Binding Rounds}"
                ItemContainerStyle="{StaticResource RoundStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="110" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <ContentControl Grid.RowSpan="5" Style="{StaticResource LogoStyle}" Content="{Binding}" />
                    
                    <TextBox
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        FontSize="{Binding (TextBlock.FontSize), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Multiplier}, ConverterParameter=1.4}"
                        Style="{StaticResource LightTextBox}"
                        Text="{Binding Model.Name}"
                        Padding="0,2" />

                    <DockPanel Grid.Column="1" Grid.Row="1">
                        <TextBlock
                            Text="{x:Static lp:Resources.CreationDate}"
                            Style="{StaticResource BlockStyleKey}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Width="150"
                            Height="25"
                            Padding="0,2,0,0" />

                        <TextBox
                            siq:ActivateManager.IsWatching="True"
                            Style="{StaticResource LightTextBox}"
                            MinWidth="90"
                            Text="{Binding Model.Date}" />
                    </DockPanel>

                    <ContentControl Grid.Column="1" Grid.Row="2" ContentTemplate="{StaticResource Publisher}" Content="{Binding}" />
                    <ContentControl Grid.Column="1" Grid.Row="3" Style="{StaticResource TagsStyle}" Content="{Binding}" />
                    <ContentControl Grid.Column="1" Grid.Row="4" Style="{StaticResource QualityStyle}" Content="{Binding}" />
                    <ContentControl Grid.Column="2" Grid.Row="4" Style="{StaticResource LanguageStyle}" Content="{Binding}" />
                    <ContentControl Grid.Column="2" Grid.Row="1" Margin="15,0,0,0" ContentTemplate="{StaticResource Restrictions}" Content="{Binding}" />
                    <ContentControl Grid.Column="2" Grid.Row="2" Margin="15,0,0,0" ContentTemplate="{StaticResource Difficulty}" Content="{Binding}" />
                    <ContentControl Grid.Column="2" Grid.Row="3" Margin="15,0,0,0" Style="{StaticResource ContactUrlStyle}" Content="{Binding}" />

                    <ContentControl Grid.Row="5" Grid.ColumnSpan="3" Content="{Binding Info}" />
                </Grid>
            </HierarchicalDataTemplate>

            <Style x:Key="ThemeStyle" BasedOn="{StaticResource QTreeViewItem}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
            </Style>

            <HierarchicalDataTemplate
                DataType="{x:Type vm:RoundViewModel}"
                ItemsSource="{Binding Themes}"
                ItemContainerStyle="{StaticResource ThemeStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBox
                        Name="default"
                        FontSize="{
                            Binding (TextBlock.FontSize),
                            RelativeSource={RelativeSource TemplatedParent},
                            Converter={StaticResource Multiplier},
                            ConverterParameter=1.333}"
                        siq:ActivateManager.IsWatching="True"
                        Style="{StaticResource LightTextBox}"
                        Grid.ColumnSpan="2"
                        Text="{Binding Model.Name}"
                        Padding="0,2" />
                    
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="(" VerticalAlignment="Center" Style="{StaticResource BlockStyleKey}" />
                    
                    <ComboBox
                        Style="{StaticResource ComboBoxCommon}"
                        Grid.Row="0"
                        Grid.Column="3"
                        IsEditable="True"
                        ItemsSource="{Binding Source={StaticResource RTypes}, Path=Values, Mode=OneTime}"
                        Text="{Binding Path=Model.Type, Converter={StaticResource RoundTypeConverter}}"
                        VerticalAlignment="Center" />
                    
                    <TextBlock Grid.Row="0" Grid.Column="4" Text=")" VerticalAlignment="Center" Style="{StaticResource BlockStyleKey}" />
                    <ContentControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Content="{Binding Info}" KeyboardNavigation.IsTabStop="False" />
                </Grid>

                <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsDragged}" Value="True">
                        <Setter Property="Opacity" Value="0.2" />
                    </DataTrigger>
                </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>

            <Style x:Key="QuestionStyle" BasedOn="{StaticResource QTreeViewItem}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="Margin" Value="0,1" />
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <Border
                                x:Name="Bd"
                                HorizontalAlignment="Stretch"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                Padding="{TemplateBinding Control.Padding}"
                                Background="{TemplateBinding Panel.Background}"
                                SnapsToDevicePixels="True">
                                
                                <ContentPresenter
                                    x:Name="PART_Header"
                                    Content="{TemplateBinding HeaderedContentControl.Header}"
                                    ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                    ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource ItemOverBrush}" />
                                    
                                    <Setter
                                        Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                
                                <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource ItemSelectedBrush}" />
                                    
                                    <Setter
                                        Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static m:AppSettings.Default}, Path=AlightAnswersRight}" Value="True">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <HierarchicalDataTemplate
                DataType="{x:Type vm:ThemeViewModel}"
                ItemsSource="{Binding Questions}"
                ItemContainerStyle="{StaticResource QuestionStyle}">
                <StackPanel>
                    <TextBox
                        Name="default"
                        FontSize="{Binding (TextBlock.FontSize), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Multiplier}, ConverterParameter=1.267}"
                        siq:ActivateManager.IsWatching="True"
                        Style="{StaticResource LightTextBox}"
                        MinWidth="90"
                        Padding="0,2"
                        Text="{Binding Model.Name, UpdateSourceTrigger=PropertyChanged}" />
                    
                    <ContentControl Content="{Binding Info}" KeyboardNavigation.IsTabStop="False" />                    
                </StackPanel>

                <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsDragged}" Value="True">
                        <Setter Property="Opacity" Value="0.2" />
                    </DataTrigger>
                </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>

            <Style x:Key="QuestionMark" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BlockStyleKey}">
                <Setter Property="Grid.RowSpan" Value="2" />
                <Setter Property="Text" Value="?" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="2,0" />
                <Setter Property="Width" Value="20" />
                <Setter Property="Cursor" Value="Hand" />
            </Style>

            <DataTemplate x:Key="SelectionModeTemplate" DataType="vm:StepParameterViewModel">
                <ComboBox
                    Style="{StaticResource ComboBoxCommon}"
                    Padding="5,2,2,2"
                    Width="200"
                    Height="Auto"
                    HorizontalAlignment="Left"
                    SelectedItem="{Binding Model.SimpleValue, Converter={StaticResource SelectionModesConverter}}"
                    ItemsSource="{Binding Source={StaticResource SelectionModes}, Path=Values, Mode=OneTime}" />
            </DataTemplate>

            <DataTemplate x:Key="QuestionTypeTemplateNew" DataType="vm:QuestionViewModel">
                <StackPanel Orientation="Horizontal">
                    <ComboBox
                        Style="{StaticResource ComboBoxCommon}"
                        IsSynchronizedWithCurrentItem="False"
                        HorizontalAlignment="Left"
                        MinWidth="50"
                        MaxWidth="350"
                        IsEditable="True"
                        ItemsSource="{Binding Source={StaticResource QuestionTypesNamesNew}}"
                        Text="{Binding TypeName, Converter={StaticResource QuestionTypeConverterNew}, Mode=TwoWay}"
                        FontWeight="Bold" />

                    <Button
                        Margin="5,0,0,0"
                        Padding="4"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding ClearType}"
                        ToolTip="{x:Static lp:Resources.ClearType}">
                        <Path Fill="#00FFFFFF" Stroke="#FF989898" StrokeThickness="1" Data="M0,0L6,6M0,6L6,0" />
                    </Button>
                </StackPanel>
            </DataTemplate>

            <siqcv:NotSimpleConverter x:Key="NotSimpleConverter" />
            <siqcv:NotDefaultTypeConverter x:Key="NotDefaultTypeConverter" />

            <Style x:Key="QuestionTypeStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding TypeName, Converter={StaticResource NotDefaultTypeConverter}}" Value="True">
                        <Setter Property="ContentTemplate" Value="{StaticResource QuestionTypeTemplateNew}" />
                        <Setter Property="Content" Value="{Binding}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="WrongAnswersTemplateKey">
                <siq:TextList
                    Style="{StaticResource LightTextBox}"
                    CurrentPosition="{Binding CurrentPosition, Mode=OneWayToSource}"
                    ItemsSource="{Binding}"
                    Background="#FFFFE1E6"
                    siq:SmartMenuManager.SecondMenu="True"
                    siq:ActivateManager.IsWatching="True"
                    Padding="4" />
            </DataTemplate>

            <Style x:Key="WrongAnswersStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Wrong.Count,Converter={StaticResource GreaterZero}}" Value="true">
                        <Setter Property="ContentTemplate" Value="{StaticResource WrongAnswersTemplateKey}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <siqcv:TimeSpanToSecondsConverter x:Key="TimeSpanToSecondsConverter" />

            <ControlTemplate TargetType="ContentControl" x:Key="ContentItemDurationTemplate">
                <StackPanel Background="#DDDDDD" Margin="0,0,2,0" Orientation="Horizontal" ToolTip="{x:Static lp:Resources.Duration}">
                    <Image Source="{StaticResource AddTimeImage}" Width="10" Margin="4,0,0,0" />
                    
                    <siq:NumericTextBox
                        siq:ActivateManager.IsWatching="True"
                        Style="{StaticResource CommonTextBox}"
                        Padding="2"
                        Text="{Binding Model.Duration, Converter={StaticResource TimeSpanToSecondsConverter}}" />
                </StackPanel>
            </ControlTemplate>

            <siqcv:NotEqualsConverter x:Key="NotEquals" />
            <siqcv:NotZeroTimeSpanConverter x:Key="NotZeroTimeSpanConverter" />

            <ControlTemplate TargetType="ContentControl" x:Key="ContentItemWaitForFinishTemplate">
                <Image Source="{StaticResource JoinWithNextImage}" Width="20" Height="20" ToolTip="{x:Static lp:Resources.JoinWithNext}" Margin="0,0,5,0" />
            </ControlTemplate>

            <Style x:Key="ContentItemWaitForFinishStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Content" Value="{Binding}" />
                <Setter Property="Template" Value="{StaticResource EmptyTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Model.WaitForFinish}" Value="false">
                        <Setter Property="Template" Value="{StaticResource ContentItemWaitForFinishTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ContentItemDurationStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Content" Value="{Binding}" />
                <Setter Property="Template" Value="{StaticResource EmptyTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Model.Duration, Converter={StaticResource NotZeroTimeSpanConverter}}" Value="true">
                        <Setter Property="Template" Value="{StaticResource ContentItemDurationTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate TargetType="ContentControl" x:Key="ContentItemPlacementTemplate">
                <Image Source="{StaticResource AddVoiceImage}" Width="15" Margin="2,3,2,0" />
            </ControlTemplate>

            <Style x:Key="ContentItemPlacementStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Content" Value="{Binding}" />
                <Setter Property="Template" Value="{StaticResource EmptyTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Model.Placement}" Value="replic">
                        <Setter Property="Template" Value="{StaticResource ContentItemPlacementTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ImageControlNewStyle" TargetType="ContentControl">
                <Setter Property="Content" Value="{Binding}" />

                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image
                                Margin="2"
                                ToolTip="{Binding Model.Value}"
                                MinWidth="20"
                                MinHeight="20"
                                MaxWidth="200"
                                MaxHeight="200"
                                Stretch="Uniform"
                                Source="{Binding MediaSource.Uri, Converter={StaticResource ImageConverter}}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{StaticResource AddImageImage}" Height="25" />

                                        <TextBox
                                            IsReadOnly="True"
                                            Style="{StaticResource CommonTextBox}"
                                            Foreground="DarkRed"
                                            TextWrapping="Wrap"
                                            Height="Auto"
                                            MinWidth="50"
                                            Text="{Binding Model.Value}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AudioControlNewStyle" TargetType="ContentControl">
                <Setter Property="Content" Value="{Binding}" />

                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4" ToolTip="{Binding Model.Value}">
                                <ToggleButton Style="{StaticResource playButton}" Name="play" />
                                <Slider Style="{StaticResource playSlider}" Name="progress" />

                                <MediaElement
                                    Name="mediaElement1"
                                    lb:MediaController.Source="{Binding}"
                                    LoadedBehavior="Manual"
                                    UnloadedBehavior="Manual"
                                    ScrubbingEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasVideo}"
                                    lb:MediaController.PlayPauseButton="{Binding ElementName=play}"
                                    lb:MediaController.Progress="{Binding ElementName=progress}" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{StaticResource AddAudioImage}" Height="25" />

                                        <TextBox
                                            IsReadOnly="True"
                                            Style="{StaticResource CommonTextBox}"
                                            Foreground="DarkBlue"
                                            TextWrapping="Wrap"
                                            Height="Auto"
                                            MinWidth="50"
                                            Text="{Binding Model.Value}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="VideoControlNewStyle" TargetType="ContentControl">
                <Setter Property="Content" Value="{Binding}" />

                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid Margin="4" ToolTip="{Binding Model.Value}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Rectangle Fill="Lavender" />

                                <MediaElement
                                    Name="mediaElement1"
                                    lb:MediaController.Source="{Binding}"
                                    LoadedBehavior="Manual"
                                    UnloadedBehavior="Manual"
                                    Width="400"
                                    Height="200"
                                    ScrubbingEnabled="{Binding RelativeSource={RelativeSource Self}, Path=HasVideo}"
                                    lb:MediaController.PlayPauseButton="{Binding ElementName=play}"
                                    lb:MediaController.Progress="{Binding ElementName=progress}" />

                                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,5,0,0">
                                    <ToggleButton Style="{StaticResource playButton}" Name="play" />
                                    <Slider Style="{StaticResource playSlider}" Name="progress" />
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{StaticResource AddVideoImage}" Height="25" />

                                        <TextBox
                                            IsReadOnly="True"
                                            Style="{StaticResource CommonTextBox}"
                                            Foreground="DarkGreen"
                                            TextWrapping="Wrap"
                                            Height="Auto"
                                            MinWidth="50"
                                            Text="{Binding Model.Value}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="HtmlControlNewStyle" TargetType="ContentControl">
                <Setter Property="Content" Value="{Binding}" />

                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="vm:ContentItemViewModel">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource AddHtmlImage}" Height="25" />

                                <TextBox
                                    IsReadOnly="True"
                                    Style="{StaticResource CommonTextBox}"
                                    Foreground="DarkCyan"
                                    TextWrapping="Wrap"
                                    Height="Auto"
                                    MinWidth="50"
                                    Text="{Binding Model.Value}" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ContentWarningBox" BasedOn="{StaticResource WarningBox}" TargetType="ContentControl">
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Margin" Value="-7,0,0,4" />
            </Style>

            <siqcv:TemplateConverter x:Key="ContentItemSelector">
                <siqcv:TemplateConverter.DefaultTemplate>
                    <!-- pc:ContentTypes.Text -->
                    <DataTemplate DataType="vm:ContentItemViewModel">
                        <TextBox
                            lb:PasteBehavior.IsAttached="True"
                            siq:ActivateManager.IsWatching="True"
                            TextWrapping="Wrap"
                            AcceptsReturn="True"
                            Height="Auto"
                            MinWidth="250"
                            Text="{Binding Model.Value, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource CommonTextBox}"
                            TabIndex="2"
                            Padding="0,2"
                            VerticalAlignment="Center" />
                    </DataTemplate>
                </siqcv:TemplateConverter.DefaultTemplate>

                <siqcv:TemplateConverter.Templates>
                    <DataTemplate x:Key="{x:Static pc:ContentTypes.Image}">
                        <DockPanel>
                            <ContentControl Style="{StaticResource ImageControlNewStyle}" />
                            <ContentControl Style="{StaticResource ContentWarningBox}" />
                        </DockPanel>
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Static pc:ContentTypes.Audio}">
                        <DockPanel>
                            <ContentControl Style="{StaticResource AudioControlNewStyle}" />
                            <ContentControl Style="{StaticResource ContentWarningBox}" />
                        </DockPanel>
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Static pc:ContentTypes.Video}">
                        <DockPanel>
                            <ContentControl Style="{StaticResource VideoControlNewStyle}" />
                            <ContentControl Style="{StaticResource ContentWarningBox}" />
                        </DockPanel>
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Static pc:ContentTypes.Html}">
                        <DockPanel>
                            <ContentControl Style="{StaticResource HtmlControlNewStyle}" />
                        </DockPanel>
                    </DataTemplate>
                </siqcv:TemplateConverter.Templates>
            </siqcv:TemplateConverter>

            <siqcv:TemplateConverter x:Key="GroupParameterSelector">
                <siqcv:TemplateConverter.DefaultTemplate>
                    <!-- pc:StepParameterTypes.Simple -->
                    <DataTemplate DataType="vm:StepParameterViewModel">
                        <TextBox Text="{Binding Model.SimpleValue, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CommonTextBox}" />
                    </DataTemplate>
                </siqcv:TemplateConverter.DefaultTemplate>

                <siqcv:TemplateConverter.Templates>
                    <DataTemplate x:Key="{x:Static pc:StepParameterTypes.Content}" DataType="vm:StepParameterViewModel">
                        <ItemsControl
                            DataContext="{Binding ContentValue}"
                            ItemsSource="{Binding}"
                            siq:SmartMenuManager.SecondMenu="True"
                            vm1:ItemsControlWatcher.IsWatching="True">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="vm:ContentItemViewModel">
                                    <DockPanel>
                                        <ContentControl Style="{StaticResource ContentItemWaitForFinishStyle}" KeyboardNavigation.IsTabStop="False" />
                                        <ContentControl Style="{StaticResource ContentItemDurationStyle}" KeyboardNavigation.IsTabStop="False" />
                                        <ContentControl Style="{StaticResource ContentItemPlacementStyle}" KeyboardNavigation.IsTabStop="False" />

                                        <ContentControl
                                            Content="{Binding}"
                                            ContentTemplate="{Binding Model.Type, Converter={StaticResource ContentItemSelector}}" />
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Static pc:StepParameterTypes.NumberSet}" DataType="vm:StepParameterViewModel">
                        <lv:NumberSetEditor DataContext="{Binding NumberSetValue}" />
                    </DataTemplate>
                </siqcv:TemplateConverter.Templates>
            </siqcv:TemplateConverter>

            <DataTemplate x:Key="GroupItemTemplate">
                <DockPanel Background="Transparent">
                    <StackPanel Margin="0,2,0,0" Orientation="Horizontal">
                        <Button
                            x:Name="bDelete"
                            Command="{Binding DataContext.GroupValue.DeleteItem, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                            CommandParameter="{Binding}"
                            ToolTip="{x:Static lp:Resources.Delete}"
                            VerticalAlignment="Center"
                            Visibility="Hidden">
                            <Path Fill="#00FFFFFF" Stroke="#FF989898" StrokeThickness="1" Data="M0,0L9,9M0,9L9,0" />

                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button
                            x:Name="bSetRight"
                            Command="{Binding DataContext.GroupValue.MakeRight, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                            CommandParameter="{Binding}"
                            ToolTip="{x:Static lp:Resources.MakeRight}"
                            Margin="2,0,0,0"
                            VerticalAlignment="Center"
                            Visibility="Hidden">
                            <Image x:Name="iSetRight" Source="{StaticResource SetRightAnswerImage}" Width="14" Height="14" />

                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="ToolTip" Value="" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                    <TextBlock
                        x:Name="name"
                        Text="{Binding Key}"
                        DockPanel.Dock="Left"
                        MinWidth="25"
                        FontWeight="Bold"
                        Foreground="Black"
                        VerticalAlignment="Center"
                        TextAlignment="Left"
                        Margin="5,2,3,2" />

                    <Border
                        Background="LightBlue"
                        MinWidth="25"
                        Margin="1">
                        <ContentControl
                            x:Name="value"
                            Margin="0,2,0,0"
                            TextBlock.Foreground="Black"
                            Content="{Binding Value}"
                            ContentTemplate="{Binding Value.Model.Type, Converter={StaticResource GroupParameterSelector}}"
                            KeyboardNavigation.IsTabStop="False" />
                    </Border>
                </DockPanel>

                <DataTemplate.Triggers>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter TargetName="bDelete" Property="Visibility" Value="Visible" />
                        <Setter TargetName="bSetRight" Property="Visibility" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="bDelete" Property="Visibility" Value="Visible" />
                        <Setter TargetName="bSetRight" Property="Visibility" Value="Visible" />
                    </Trigger>

                    <DataTrigger Value="True">
                        <DataTrigger.Binding>
                            <MultiBinding Converter="{StaticResource EqualsMultiConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="Key" />
                                    <Binding Path="DataContext.GroupValue.Owner.Right[0]" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </DataTrigger.Binding>

                        <Setter TargetName="bSetRight" Property="Visibility" Value="Visible" />
                        <Setter TargetName="bSetRight" Property="IsEnabled" Value="False" />
                        <Setter TargetName="iSetRight" Property="Source" Value="{StaticResource AnswerTypeImage}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <siqcv:TemplateConverter x:Key="ParameterSelector">
                <siqcv:TemplateConverter.DefaultTemplate>
                    <!-- pc:StepParameterTypes.Simple -->
                    <DataTemplate DataType="vm:StepParameterViewModel">
                        <TextBox Text="{Binding Model.SimpleValue, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CommonTextBox}" />
                    </DataTemplate>
                </siqcv:TemplateConverter.DefaultTemplate>

                <siqcv:TemplateConverter.Templates>
                    <DataTemplate x:Key="{x:Static pc:StepParameterTypes.Content}" DataType="vm:StepParameterViewModel">
                        <ListBox
                            DataContext="{Binding ContentValue}"
                            ItemsSource="{Binding}"
                            siq:SmartMenuManager.SecondMenu="True"
                            vm1:ItemsControlWatcher.IsWatching="True"
                            SelectedItem="{Binding CurrentItem}"
                            Background="Transparent"
                            BorderThickness="0">
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </ListBox.Template>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border x:Name="border"
                                                    Margin="{TemplateBinding Margin}"
                                                    Background="{TemplateBinding Background}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    BorderBrush="{TemplateBinding BorderBrush}">
                                                    <ContentPresenter />
                                                </Border>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter TargetName="border" Property="Background" Value="{StaticResource SecondHighlightColor}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Background" Value="#F3F3F3" />
                                    <Setter Property="Margin" Value="1" />
                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="vm:ContentItemViewModel">
                                    <DockPanel>
                                        <ContentControl Style="{StaticResource ContentItemWaitForFinishStyle}" KeyboardNavigation.IsTabStop="False" />
                                        <ContentControl Style="{StaticResource ContentItemDurationStyle}" KeyboardNavigation.IsTabStop="False" />
                                        <ContentControl Style="{StaticResource ContentItemPlacementStyle}" KeyboardNavigation.IsTabStop="False" />

                                        <ContentControl
                                            Content="{Binding}"
                                            ContentTemplate="{Binding Model.Type, Converter={StaticResource ContentItemSelector}}" />
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Static pc:StepParameterTypes.Group}" DataType="vm:StepParameterViewModel">
                        <ItemsControl ItemsSource="{Binding GroupValue}" ItemTemplate="{StaticResource GroupItemTemplate}" />
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Static pc:StepParameterTypes.NumberSet}" DataType="vm:StepParameterViewModel">
                        <lv:NumberSetEditor DataContext="{Binding NumberSetValue}" />
                    </DataTemplate>
                </siqcv:TemplateConverter.Templates>
            </siqcv:TemplateConverter>

            <siqcv:TemplateConverter x:Key="ParameterNameSelector">
                <siqcv:TemplateConverter.DefaultTemplate>
                    <!-- pc:StepParameterTypes.Simple -->
                    <DataTemplate DataType="vm:StepParameterViewModel">
                        <TextBlock
                            Text="{Binding}"
                            FontWeight="Bold"
                            Foreground="Black" />
                    </DataTemplate>
                </siqcv:TemplateConverter.DefaultTemplate>

                <siqcv:TemplateConverter.Templates>
                    <DataTemplate x:Key="{x:Static pc:StepParameterTypes.Group}" DataType="vm:StepParameterViewModel">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                DockPanel.Dock="Left"
                                Text="{Binding}"
                                FontWeight="Bold"
                                Foreground="Black"
                                Margin="0,3,0,0" />
                            
                            <Button
                                VerticalAlignment="Top"
                                DockPanel.Dock="Left"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                ToolTip="{x:Static lp:Resources.AddOption}"
                                Command="{Binding DataContext.Value.GroupValue.AddItem, RelativeSource={RelativeSource AncestorType=DockPanel}}"
                                CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                Width="25"
                                Height="25"
                                Margin="5,0,0,0" >
                                <Path Stretch="Uniform" Fill="#FF989898" Margin="1" Data="{Binding Source={StaticResource app_add}, Path=Data}" />
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </siqcv:TemplateConverter.Templates>
            </siqcv:TemplateConverter>

            <Style x:Key="ParametersStyle" TargetType="{x:Type ItemsControl}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ItemsSource" Value="{Binding Parameters}" />
                
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <DockPanel>
                                <ContentControl
                                    x:Name="name"
                                    Content="{Binding Key, Converter={StaticResource QuestionParameterNamesConverter}}"
                                    ContentTemplate="{Binding Value.Model.Type, Converter={StaticResource ParameterNameSelector}}"
                                    DockPanel.Dock="Left"
                                    MinWidth="250"
                                    Margin="3,2,10,2" />

                                <ContentControl
                                    x:Name="value"
                                    Margin="0,2,0,0"
                                    TextBlock.Foreground="Black"
                                    Content="{Binding Value}"
                                    ContentTemplate="{Binding Value.Model.Type, Converter={StaticResource ParameterSelector}}"
                                    KeyboardNavigation.IsTabStop="False" />
                            </DockPanel>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.Question}">
                                    <Setter TargetName="name" Property="Content" Value="" />
                                    <Setter TargetName="name" Property="MinWidth" Value="0" />
                                    <Setter TargetName="name" Property="Margin" Value="3,2,0,2" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.Answer}">
                                    <Setter TargetName="name" Property="DockPanel.Dock" Value="Top" />
                                    <Setter TargetName="name" Property="MinWidth" Value="0" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.SelectionMode}">
                                    <Setter TargetName="value" Property="ContentTemplate" Value="{StaticResource SelectionModeTemplate}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.AnswerType}">
                                    <Setter TargetName="name" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="value" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Key}" Value="{x:Static pc:QuestionParameterNames.AnswerOptions}">
                                    <Setter TargetName="name" Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />
                                    <Setter TargetName="value" Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                
                <Setter Property="siq:SmartMenuManager.SecondMenu" Value="False" />
                <Setter Property="vm1:ItemsControlWatcher.IsWatching" Value="False" />
            </Style>

            <DataTemplate x:Key="SimpleAnswerTemplate">
                <StackPanel
                    MaxWidth="400"
                    Orientation="Vertical"
                    VerticalAlignment="Center"
                    TextBlock.FontStyle="Italic"
                    Background="Honeydew">
                    <siq:TextList
                        x:Name="right"
                        Style="{StaticResource LightTextBox}"
                        siq:SmartMenuManager.SecondMenu="True"
                        CurrentPosition="{Binding CurrentPosition, Mode=OneWayToSource}"
                        DataContext="{Binding Right}"
                        ItemsSource="{Binding}"
                        MinWidth="75"
                        TabIndex="3"
                        Padding="3" />

                    <ContentControl
                        Style="{StaticResource WrongAnswersStyle}"
                        Content="{Binding Wrong}"
                        KeyboardNavigation.IsTabStop="False" />
                </StackPanel>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Model.Price}" Value="{x:Static p:Question.InvalidPrice}">
                        <Setter TargetName="right" Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="AnswerOptionsTemplate">
                <StackPanel DataContext="{Binding AnswerOptions}" Orientation="Horizontal">
                    <Button
                        VerticalAlignment="Top"
                        DockPanel.Dock="Left"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="{x:Static lp:Resources.AddOption}"
                        Command="{Binding GroupValue.AddItem}"
                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                        Width="25"
                        Height="25"
                        Margin="2">
                        <Path Stretch="Uniform" Fill="#FF989898" Margin="1" Data="{Binding Source={StaticResource app_add}, Path=Data}" />
                    </Button>
                    
                    <ItemsControl
                        ItemsSource="{Binding GroupValue}"
                        ItemTemplate="{StaticResource GroupItemTemplate}"
                        Background="Honeydew"
                        MaxWidth="800" />
                </StackPanel>
            </DataTemplate>

            <Style x:Key="AnswerBlockStyle" TargetType="ContentControl">
                <Setter Property="ContentTemplate" Value="{StaticResource SimpleAnswerTemplate}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Parameters.AnswerType}" Value="select">
                        <Setter Property="ContentTemplate" Value="{StaticResource AnswerOptionsTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <HierarchicalDataTemplate DataType="{x:Type vm:QuestionViewModel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" MinWidth="400" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <TextBlock Style="{StaticResource QuestionMark}" />
                    
                    <siq:NumericTextBox
                        x:Name="price"
                        Style="{StaticResource LightTextBox}"
                        Grid.Row="0"
                        Grid.Column="1"
                        Grid.RowSpan="2"
                        Text="{Binding Model.Price, Converter={StaticResource PriceConverter}}"
                        MinWidth="30"
                        TabIndex="1" />
                    
                    <ContentControl
                        Grid.Row="0"
                        Grid.Column="2"
                        Style="{StaticResource QuestionTypeStyle}"
                        KeyboardNavigation.IsTabStop="False" />

                    <ItemsControl
                        Name="parameters"
                        Grid.Row="1"
                        Grid.Column="2"
                        Style="{StaticResource ParametersStyle}"
                        KeyboardNavigation.IsTabStop="False" />

                    <ContentControl
                        Grid.Row="2"
                        Grid.Column="1"
                        Grid.ColumnSpan="5"
                        Content="{Binding Info}"
                        KeyboardNavigation.IsTabStop="False" />

                    <ContentControl
                        x:Name="answer"
                        Grid.Row="1"
                        Grid.Column="4"
                        Content="{Binding}"
                        Style="{StaticResource AnswerBlockStyle}" />
                </Grid>

                <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Model.Price}" Value="{x:Static p:Question.InvalidPrice}">
                        <Setter TargetName="price" Property="IsEnabled" Value="False" />
                        <Setter TargetName="parameters" Property="IsEnabled" Value="False" />
                    </DataTrigger>
                    
                    <DataTrigger Binding="{Binding IsDragged}" Value="True">
                        <Setter Property="Opacity" Value="0.2" />
                    </DataTrigger>
                </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>
            
            <util:LinkManager x:Key="LinkManager" />

            <DataTemplate x:Key="Authors" DataType="{x:Type vm:AuthorsViewModel}">
                <DockPanel>
                    <TextBlock Text="{x:Static lp:Resources.AuthorsHeader}" Style="{StaticResource BlockStyleKey}" />
                    
                    <siq:TextList
                        Style="{StaticResource LightTextBox}"
                        ItemsSource="{Binding}"
                        LinkManager="{StaticResource LinkManager}"
                        siq:SmartMenuManager.SecondMenu="True"
                        CurrentPosition="{Binding CurrentPosition, Mode=OneWayToSource}"
                        siq:ActivateManager.IsWatching="True" />
                </DockPanel>
            </DataTemplate>

            <DataTemplate x:Key="Sources" DataType="{x:Type vm:SourcesViewModel}">
                <DockPanel Background="Transparent">
                    <TextBlock Text="{x:Static lp:Resources.SourcesHeader}" Style="{StaticResource BlockStyleKey}" />

                    <Button
                        x:Name="openUrl"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding OpenUri}"
                        Width="20"
                        Height="20"
                        Padding="1"
                        Visibility="Hidden"
                        ToolTip="{x:Static lp:Resources.OpenLink}">
                        <Path Stroke="Gray" Stretch="Fill" Margin="3" StrokeThickness="2" Data="M5,15 L15,5 M15,12 V5 H8" />
                    </Button>

                    <siq:TextList
                        Style="{StaticResource LightTextBox}"
                        ItemsSource="{Binding}"
                        LinkManager="{StaticResource LinkManager}"
                        siq:SmartMenuManager.SecondMenu="True"
                        CurrentPosition="{Binding CurrentPosition, Mode=OneWayToSource}"
                        siq:ActivateManager.IsWatching="True" />
                </DockPanel>

                <DataTemplate.Triggers>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter TargetName="openUrl" Property="Visibility" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="openUrl" Property="Visibility" Value="Visible" />
                    </Trigger>
                    
                    <DataTrigger Binding="{Binding Url}" Value="{x:Null}">
                        <Setter TargetName="openUrl" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="Comments" DataType="{x:Type vm:CommentsViewModel}">
                <DockPanel x:Name="panel" Background="Transparent">
                    <TextBlock Text="{x:Static lp:Resources.CommentsHeader}" Style="{StaticResource BlockStyleKey}" />

                    <Button
                        x:Name="remove"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        lb:ClearTextBehaviour.Target="{Binding ElementName=text}"
                        Width="20"
                        Height="20"
                        Visibility="Hidden"
                        ToolTip="{x:Static lp:Resources.RemoveComment}">
                        <Path Data="M0,0L1,1M0,1L1,0" Stroke="Gray" Stretch="Fill" Margin="3" />
                    </Button>
                    
                    <TextBox
                        x:Name="text"
                        Style="{StaticResource LightTextBox}"
                        siq:ActivateManager.IsWatching="True"
                        Text="{Binding Text}"
                        AcceptsReturn="True" />
                </DockPanel>

                <DataTemplate.Triggers>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter TargetName="remove" Property="Visibility" Value="Visible" />
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="remove" Property="Visibility" Value="Visible" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="AuthorsStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Authors.Count, Converter={StaticResource GreaterZero}}" Value="true">
                        <Setter Property="ContentTemplate" Value="{StaticResource Authors}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SourcesStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Sources.Count, Converter={StaticResource GreaterZero}}" Value="true">
                        <Setter Property="ContentTemplate" Value="{StaticResource Sources}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CommentsStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="ContentTemplate" Value="{StaticResource EmptyDataTemplate}" />
                
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Comments.Text.Length, Converter={StaticResource GreaterZero}}" Value="true">
                        <Setter Property="ContentTemplate" Value="{StaticResource Comments}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate DataType="{x:Type vm:InfoViewModel}">
                <StackPanel>
                    <ContentControl Style="{StaticResource AuthorsStyle}" Content="{Binding Authors}" KeyboardNavigation.IsTabStop="False" />
                    <ContentControl Style="{StaticResource SourcesStyle}" Content="{Binding Sources}" KeyboardNavigation.IsTabStop="False" />
                    <ContentControl Style="{StaticResource CommentsStyle}" Content="{Binding Comments}" KeyboardNavigation.IsTabStop="False" />
                </StackPanel>
            </DataTemplate>

            <Style x:Key="ContextMenu" TargetType="Popup">
                <Setter Property="FocusManager.IsFocusScope" Value="True" />
                <Setter Property="DataContext" Value="{Binding Source={x:Static vm1:ActionMenuViewModel.Instance}}" />
                <Setter Property="IsOpen" Value="{Binding IsOpen}" />
                <Setter Property="Placement" Value="Top" />
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="PlacementTarget" Value="{Binding PlacementTarget}" />
                <Setter Property="VerticalOffset" Value="-2" />
                <Setter Property="HorizontalOffset" Value="80" />
                <Setter Property="IsEnabled" Value="{Binding ElementName=main,Path=IsEnabled}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="util:PopupManager.Owner" Value="{Binding Source={x:Static siq:App.Current},Path=MainWindow}" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
